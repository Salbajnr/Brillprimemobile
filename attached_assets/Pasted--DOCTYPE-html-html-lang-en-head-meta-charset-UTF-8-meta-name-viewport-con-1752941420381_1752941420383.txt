<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vendor Profile</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700;800&display=swap" rel="stylesheet">
    <style>
        .primary-blue { color: rgb(11, 26, 81); }
        .secondary-blue { color: rgb(70, 130, 180); }
        .primary-text { color: rgb(19, 19, 19); }
        .bg-primary { background-color: rgb(11, 26, 81); }
        
        .curved-input {
            border-radius: 25px;
            border: 1px solid #e5e7eb;
        }
        
        .curved-button {
            border-radius: 25px;
        }
        
        .montserrat {
            font-family: 'Montserrat', sans-serif;
        }
        
        .profile-picture {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4682B4, #87CEEB);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 36px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s ease;
            position: relative;
            overflow: hidden;
        }
        
        .profile-picture:hover {
            transform: scale(1.05);
        }
        
        .profile-picture::after {
            content: '+';
            position: absolute;
            bottom: 0;
            right: 0;
            width: 30px;
            height: 30px;
            background: #4682B4;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            border: 3px solid white;
        }
        
        .loading-spinner {
            border: 2px solid #f3f3f3;
            border-top: 2px solid #4682B4;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .input-disabled {
            background-color: #f9fafb;
            color: #6b7280;
            cursor: not-allowed;
        }
        
        .input-error {
            border-color: #ef4444;
            box-shadow: 0 0 0 1px #ef4444;
        }
        
        .snackbar {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            padding: 12px 24px;
            border-radius: 25px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .snackbar.show {
            opacity: 1;
        }
        
        .snackbar.success {
            background-color: #10b981;
        }
        
        .snackbar.error {
            background-color: #ef4444;
        }
        
        .snackbar.warning {
            background-color: #f59e0b;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Snackbar -->
    <div id="snackbar" class="snackbar montserrat">
        <span id="snackbar-message"></span>
    </div>

    <div class="min-h-screen bg-white">
        <div class="px-6 py-8 max-w-md mx-auto">
            <!-- Custom App Bar -->
            <div class="flex items-center mb-6">
                <button onclick="goBack()" class="w-6 h-6 bg-gray-300 hover:bg-gray-400 transition duration-200 rounded">
                    <svg class="w-4 h-4 m-1" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>

            <!-- Profile Picture -->
            <div class="text-center mb-8">
                <div class="profile-picture mx-auto mb-2" onclick="changeProfilePicture()">
                    V
                </div>
            </div>

            <!-- Form -->
            <form id="profileForm" novalidate>
                <!-- Username Field -->
                <div class="mb-6">
                    <div class="text-center mb-2">
                        <label class="primary-text text-lg font-bold montserrat">Username</label>
                    </div>
                    <div class="relative">
                        <input 
                            type="text" 
                            id="fullName"
                            name="fullName"
                            class="w-full px-4 py-4 curved-input focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base montserrat input-disabled"
                            placeholder="Full Name"
                            value="John Doe"
                            disabled
                            required
                            minlength="5"
                        >
                    </div>
                </div>

                <!-- Email Field -->
                <div class="mb-6">
                    <div class="text-center mb-2">
                        <label class="primary-text text-lg font-bold montserrat">Email</label>
                    </div>
                    <div class="relative">
                        <input 
                            type="email" 
                            id="email"
                            name="email"
                            class="w-full px-4 py-4 curved-input focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base montserrat input-disabled"
                            placeholder="Email"
                            value="john.doe@example.com"
                            disabled
                            required
                        >
                    </div>
                </div>

                <!-- Phone Number Field -->
                <div class="mb-6">
                    <div class="text-center mb-2">
                        <label class="primary-text text-lg font-bold montserrat">Number</label>
                    </div>
                    <div class="relative">
                        <input 
                            type="tel" 
                            id="phone"
                            name="phone"
                            class="w-full px-4 py-4 curved-input focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base montserrat input-disabled"
                            placeholder="+234 8000 0000 00"
                            value="+234 8012 345 678"
                            disabled
                            required
                            minlength="10"
                        >
                    </div>
                </div>

                <!-- Location Field -->
                <div class="mb-8">
                    <div class="text-center mb-2">
                        <label class="primary-text text-lg font-bold montserrat">Location</label>
                    </div>
                    <div class="relative">
                        <input 
                            type="text" 
                            id="location"
                            name="location"
                            class="w-full px-4 py-4 curved-input focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-base montserrat input-disabled"
                            placeholder="Jahi, Abuja"
                            value="Jahi, Abuja"
                            disabled
                            required
                            minlength="3"
                        >
                    </div>
                </div>
            </form>

            <!-- Edit/Save Button -->
            <div class="flex justify-center mb-8">
                <button 
                    onclick="toggleEditMode()"
                    id="editSaveBtn"
                    class="w-48 bg-primary text-white py-4 px-4 curved-button font-medium hover:bg-blue-900 transition duration-200 montserrat text-lg flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed"
                >
                    <span id="btnText">Edit</span>
                    <div id="loadingSpinner" class="loading-spinner ml-2 hidden"></div>
                </button>
            </div>
        </div>
    </div>

    <script>
        let isEditing = false;
        let isLoading = false;

        function showSnackbar(message, type = 'success') {
            const snackbar = document.getElementById('snackbar');
            const messageEl = document.getElementById('snackbar-message');
            
            messageEl.textContent = message;
            snackbar.className = `snackbar montserrat ${type}`;
            snackbar.classList.add('show');
            
            setTimeout(() => {
                snackbar.classList.remove('show');
            }, 3000);
        }

        function goBack() {
            showSnackbar('Going back to previous screen...', 'success');
        }

        function changeProfilePicture() {
            showSnackbar('Profile picture change functionality would be implemented here', 'success');
        }

        function toggleEditMode() {
            if (isLoading) return;

            if (isEditing) {
                handleSave();
            } else {
                enableEditing();
            }
        }

        function enableEditing() {
            isEditing = true;
            const inputs = document.querySelectorAll('input');
            const button = document.getElementById('editSaveBtn');
            const btnText = document.getElementById('btnText');
            
            inputs.forEach(input => {
                input.disabled = false;
                input.classList.remove('input-disabled');
                input.classList.remove('input-error');
            });
            
            btnText.textContent = 'Save';
        }

        function disableEditing() {
            isEditing = false;
            const inputs = document.querySelectorAll('input');
            const btnText = document.getElementById('btnText');
            
            inputs.forEach(input => {
                input.disabled = true;
                input.classList.add('input-disabled');
                input.classList.remove('input-error');
            });
            
            btnText.textContent = 'Edit';
        }

        function validateField(input) {
            const value = input.value.trim();
            let isValid = true;
            let errorMessage = '';

            switch (input.id) {
                case 'fullName':
                    if (value.length < 5) {
                        isValid = false;
                        errorMessage = 'Enter a valid full name';
                    }
                    break;
                case 'email':
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    if (value.length < 4 || !emailRegex.test(value)) {
                        isValid = false;
                        errorMessage = 'Please enter a valid email';
                    }
                    break;
                case 'phone':
                    const cleanPhone = value.replace(/[^0-9]/g, '');
                    if (cleanPhone.length < 10) {
                        isValid = false;
                        errorMessage = 'Provide a valid phone number';
                    }
                    break;
                case 'location':
                    if (value.length < 3) {
                        isValid = false;
                        errorMessage = 'Provide a valid address';
                    }
                    break;
            }

            if (isValid) {
                input.classList.remove('input-error');
            } else {
                input.classList.add('input-error');
            }

            return { isValid, errorMessage };
        }

        function validateForm() {
            const inputs = document.querySelectorAll('input[required]');
            let isFormValid = true;
            let firstErrorMessage = '';

            inputs.forEach(input => {
                const validation = validateField(input);
                if (!validation.isValid) {
                    isFormValid = false;
                    if (!firstErrorMessage) {
                        firstErrorMessage = validation.errorMessage;
                    }
                }
            });

            if (!isFormValid) {
                showSnackbar(firstErrorMessage || 'Please fill all required fields correctly', 'warning');
            }

            return isFormValid;
        }

        async function handleSave() {
            if (!validateForm()) {
                return;
            }

            isLoading = true;
            const btnText = document.getElementById('btnText');
            const loadingSpinner = document.getElementById('loadingSpinner');
            const button = document.getElementById('editSaveBtn');
            
            button.disabled = true;
            btnText.textContent = 'Saving...';
            loadingSpinner.classList.remove('hidden');
            
            try {
                // Simulate API call
                await new Promise(resolve => setTimeout(resolve, 2000));
                
                // Simulate successful update
                const success = Math.random() > 0.2; // 80% success rate for demo
                
                if (success) {
                    showSnackbar('Profile updated successfully', 'success');
                    disableEditing();
                } else {
                    throw new Error('Network error occurred');
                }
            } catch (error) {
                showSnackbar(`Error updating profile: ${error.message}`, 'error');
            } finally {
                isLoading = false;
                button.disabled = false;
                loadingSpinner.classList.add('hidden');
                if (isEditing) {
                    btnText.textContent = 'Save';
                }
            }
        }

        // Real-time validation
        document.querySelectorAll('input').forEach(input => {
            input.addEventListener('blur', function() {
                if (!this.disabled) {
                    validateField(this);
                }
            });

            input.addEventListener('input', function() {
                if (this.classList.contains('input-error')) {
                    validateField(this);
                }
            });
        });

        // Phone number formatting
        document.getElementById('phone').addEventListener('input', function(e) {
            let value = this.value.replace(/[^0-9+]/g, '');
            
            // Ensure it starts with +234 if it's a Nigerian number
            if (value.startsWith('234') && !value.startsWith('+234')) {
                value = '+' + value;
            } else if (value.startsWith('0') && value.length > 1) {
                value = '+234' + value.substring(1);
            }
            
            // Limit length
            if (value.length > 14) {
                value = value.slice(0, 14);
            }
            
            this.value = value;
        });

        // Initialize profile data (simulate loading from provider)
        window.addEventListener('load', function() {
            // Simulate loading user data
            setTimeout(() => {
                // Data would be loaded from AuthProvider in real app
                console.log('Profile data loaded');
            }, 500);
        });
    </script>
</body>
</html>

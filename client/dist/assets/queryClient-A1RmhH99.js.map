{"version":3,"file":"queryClient-A1RmhH99.js","sources":["../../src/lib/queryClient.ts"],"sourcesContent":["\nimport { QueryClient } from \"@tanstack/react-query\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\n// Export apiRequest for backward compatibility\nexport const apiRequest = async (\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<any> => {\n  const response = await fetch(`/api${endpoint}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    credentials: 'include',\n    ...options,\n  });\n\n  if (!response.ok) {\n    const error = new Error(`HTTP error! status: ${response.status}`);\n    (error as any).status = response.status;\n    throw error;\n  }\n\n  return response.json();\n};\n"],"names":["QueryClient","apiRequest","endpoint","options","response","error"],"mappings":"yCAG2B,IAAIA,EAAY,CACzC,eAAgB,CACd,QAAS,CACP,MAAO,EACP,UAAW,EAAI,GAAK,IACpB,qBAAsB,EAAA,CACxB,CAEJ,CAAC,EAGM,MAAMC,EAAa,MACxBC,EACAC,EAAuB,KACN,CACjB,MAAMC,EAAW,MAAM,MAAM,OAAOF,CAAQ,GAAI,CAC9C,QAAS,CACP,eAAgB,mBAChB,GAAGC,EAAQ,OAAA,EAEb,YAAa,UACb,GAAGA,CAAA,CACJ,EAED,GAAI,CAACC,EAAS,GAAI,CAChB,MAAMC,EAAQ,IAAI,MAAM,uBAAuBD,EAAS,MAAM,EAAE,EAC/D,MAAAC,EAAc,OAASD,EAAS,OAC3BC,CACR,CAEA,OAAOD,EAAS,KAAA,CAClB"}
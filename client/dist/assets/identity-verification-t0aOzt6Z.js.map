{"version":3,"file":"identity-verification-t0aOzt6Z.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/arrow-right.js","../../src/pages/identity-verification.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowRight = createLucideIcon(\"ArrowRight\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n]);\n\nexport { ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","import { useState, useRef, useEffect } from \"react\";\nimport { useLocation, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  Camera, \n  Upload, \n  CheckCircle, \n  XCircle, \n  User, \n  Phone, \n  Mail, \n  Car,\n  FileText,\n  Shield,\n  ArrowLeft,\n  ArrowRight\n} from \"lucide-react\";\n\n// Color constants\nconst COLORS = {\n  PRIMARY: '#4682b4',\n  SECONDARY: '#0b1a51', \n  ACTIVE: '#010e42',\n  TEXT: '#131313',\n  WHITE: '#ffffff'\n} as const;\n\ninterface VerificationStep {\n  id: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  required: boolean;\n}\n\ninterface DriverVerification {\n  licenseNumber: string;\n  licenseExpiry: string;\n  licenseImage?: File;\n  vehicleType: string;\n  vehiclePlate: string;\n  vehicleModel: string;\n  vehicleYear: string;\n  faceVerification: boolean;\n}\n\ninterface ConsumerVerification {\n  phoneVerification: boolean;\n  emailVerification: boolean;\n  faceVerification: boolean;\n}\n\nexport default function IdentityVerification() {\n  const [, setLocation] = useLocation();\n  const { user } = useAuth();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [verificationData, setVerificationData] = useState<DriverVerification | ConsumerVerification>(\n    user?.role === 'DRIVER' \n      ? { licenseNumber: '', licenseExpiry: '', vehicleType: '', vehiclePlate: '', vehicleModel: '', vehicleYear: '', faceVerification: false }\n      : { phoneVerification: false, emailVerification: user?.isVerified || false, faceVerification: false }\n  );\n  const [faceImage, setFaceImage] = useState<File | null>(null);\n  const [licenseImage, setLicenseImage] = useState<File | null>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [verificationProgress, setVerificationProgress] = useState(0);\n\n  // Driver verification steps\n  const driverSteps: VerificationStep[] = [\n    {\n      id: 'license',\n      title: 'Driver License Verification',\n      description: 'Upload your valid driver license',\n      completed: false,\n      required: true\n    },\n    {\n      id: 'vehicle',\n      title: 'Vehicle Registration',\n      description: 'Register your vehicle details',\n      completed: false,\n      required: true\n    },\n    {\n      id: 'face',\n      title: 'Face Verification',\n      description: 'Verify your identity with face recognition',\n      completed: false,\n      required: true\n    }\n  ];\n\n  // Consumer verification steps\n  const consumerSteps: VerificationStep[] = [\n    {\n      id: 'email',\n      title: 'Email Verification',\n      description: 'Verify your email address',\n      completed: user?.isVerified || false,\n      required: true\n    },\n    {\n      id: 'phone',\n      title: 'Phone Verification',\n      description: 'Verify your phone number',\n      completed: false,\n      required: true\n    },\n    {\n      id: 'face',\n      title: 'Face Verification',\n      description: 'Verify your identity with face recognition',\n      completed: false,\n      required: true\n    }\n  ];\n\n  const steps = user?.role === 'DRIVER' ? driverSteps : consumerSteps;\n\n  const vehicleTypes = [\n    'Motorcycle',\n    'Car',\n    'Van',\n    'Truck',\n    'Bicycle'\n  ];\n\n  // Start camera for face verification\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { \n          width: 640, \n          height: 480,\n          facingMode: 'user'\n        } \n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraActive(true);\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (videoRef.current?.srcObject) {\n      const tracks = (videoRef.current.srcObject as MediaStream).getTracks();\n      tracks.forEach(track => track.stop());\n      setIsCameraActive(false);\n    }\n  };\n\n  // Capture face photo\n  const captureFace = () => {\n    if (videoRef.current && canvasRef.current) {\n      const canvas = canvasRef.current;\n      const video = videoRef.current;\n      const context = canvas.getContext('2d');\n\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      if (context) {\n        context.drawImage(video, 0, 0);\n        canvas.toBlob((blob) => {\n          if (blob) {\n            const file = new File([blob], 'face-verification.jpg', { type: 'image/jpeg' });\n            setFaceImage(file);\n            stopCamera();\n          }\n        }, 'image/jpeg', 0.8);\n      }\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>, type: 'license' | 'face') => {\n    const file = event.target.files?.[0];\n    if (file) {\n      if (type === 'license') {\n        setLicenseImage(file);\n      } else {\n        setFaceImage(file);\n      }\n    }\n  };\n\n  // Submit verification mutation\n  const submitVerificationMutation = useMutation({\n    mutationFn: (data: FormData) => \n      apiRequest(\"POST\", \"/api/auth/verify-identity\", data),\n    onSuccess: () => {\n      setLocation(user?.role === 'DRIVER' ? '/driver-dashboard' : '/consumer-home');\n    },\n  });\n\n  // Calculate progress\n  useEffect(() => {\n    const completedSteps = steps.filter(step => step.completed).length;\n    setVerificationProgress((completedSteps / steps.length) * 100);\n  }, [steps]);\n\n  const renderDriverLicenseStep = () => (\n    <Card className=\"rounded-3xl border-2 shadow-xl\" style={{ borderColor: COLORS.PRIMARY }}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center\" style={{ color: COLORS.SECONDARY }}>\n          <FileText className=\"h-6 w-6 mr-3\" />\n          Driver License Verification\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <Label htmlFor=\"licenseNumber\">License Number</Label>\n            <Input\n              id=\"licenseNumber\"\n              placeholder=\"Enter license number\"\n              value={(verificationData as DriverVerification).licenseNumber || ''}\n              onChange={(e) => setVerificationData(prev => ({\n                ...prev,\n                licenseNumber: e.target.value\n              }))}\n              className=\"rounded-xl border-2\"\n              style={{ borderColor: COLORS.PRIMARY + '40' }}\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"licenseExpiry\">Expiry Date</Label>\n            <Input\n              id=\"licenseExpiry\"\n              type=\"date\"\n              value={(verificationData as DriverVerification).licenseExpiry || ''}\n              onChange={(e) => setVerificationData(prev => ({\n                ...prev,\n                licenseExpiry: e.target.value\n              }))}\n              className=\"rounded-xl border-2\"\n              style={{ borderColor: COLORS.PRIMARY + '40' }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <Label>Upload License Image</Label>\n          <div className=\"mt-2\">\n            {licenseImage ? (\n              <div className=\"p-4 border-2 border-dashed rounded-xl\" style={{ borderColor: COLORS.PRIMARY }}>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <CheckCircle className=\"h-6 w-6 text-green-500\" />\n                    <span className=\"text-sm font-medium\">{licenseImage.name}</span>\n                  </div>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setLicenseImage(null)}\n                  >\n                    <XCircle className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed rounded-xl cursor-pointer hover:bg-gray-50\" style={{ borderColor: COLORS.PRIMARY }}>\n                <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                  <Upload className=\"h-8 w-8 mb-2\" style={{ color: COLORS.PRIMARY }} />\n                  <p className=\"text-sm\" style={{ color: COLORS.TEXT }}>\n                    <span className=\"font-semibold\">Click to upload</span> driver license\n                  </p>\n                  <p className=\"text-xs text-gray-500\">PNG, JPG up to 5MB</p>\n                </div>\n                <input\n                  type=\"file\"\n                  className=\"hidden\"\n                  accept=\"image/*\"\n                  onChange={(e) => handleFileUpload(e, 'license')}\n                />\n              </label>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderVehicleRegistrationStep = () => (\n    <Card className=\"rounded-3xl border-2 shadow-xl\" style={{ borderColor: COLORS.PRIMARY }}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center\" style={{ color: COLORS.SECONDARY }}>\n          <Car className=\"h-6 w-6 mr-3\" />\n          Vehicle Registration\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <Label>Vehicle Type</Label>\n            <Select\n              value={(verificationData as DriverVerification).vehicleType || ''}\n              onValueChange={(value) => setVerificationData(prev => ({\n                ...prev,\n                vehicleType: value\n              }))}\n            >\n              <SelectTrigger className=\"rounded-xl border-2\" style={{ borderColor: COLORS.PRIMARY + '40' }}>\n                <SelectValue placeholder=\"Select vehicle type\" />\n              </SelectTrigger>\n              <SelectContent>\n                {vehicleTypes.map((type) => (\n                  <SelectItem key={type} value={type}>{type}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <div>\n            <Label htmlFor=\"vehiclePlate\">Vehicle Plate Number</Label>\n            <Input\n              id=\"vehiclePlate\"\n              placeholder=\"e.g., LAG-123-AA\"\n              value={(verificationData as DriverVerification).vehiclePlate || ''}\n              onChange={(e) => setVerificationData(prev => ({\n                ...prev,\n                vehiclePlate: e.target.value.toUpperCase()\n              }))}\n              className=\"rounded-xl border-2\"\n              style={{ borderColor: COLORS.PRIMARY + '40' }}\n            />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <Label htmlFor=\"vehicleModel\">Vehicle Model</Label>\n            <Input\n              id=\"vehicleModel\"\n              placeholder=\"e.g., Honda CB 150\"\n              value={(verificationData as DriverVerification).vehicleModel || ''}\n              onChange={(e) => setVerificationData(prev => ({\n                ...prev,\n                vehicleModel: e.target.value\n              }))}\n              className=\"rounded-xl border-2\"\n              style={{ borderColor: COLORS.PRIMARY + '40' }}\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"vehicleYear\">Vehicle Year</Label>\n            <Input\n              id=\"vehicleYear\"\n              type=\"number\"\n              placeholder=\"e.g., 2020\"\n              min=\"2000\"\n              max={new Date().getFullYear() + 1}\n              value={(verificationData as DriverVerification).vehicleYear || ''}\n              onChange={(e) => setVerificationData(prev => ({\n                ...prev,\n                vehicleYear: e.target.value\n              }))}\n              className=\"rounded-xl border-2\"\n              style={{ borderColor: COLORS.PRIMARY + '40' }}\n            />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const renderFaceVerificationStep = () => (\n    <Card className=\"rounded-3xl border-2 shadow-xl\" style={{ borderColor: COLORS.PRIMARY }}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center\" style={{ color: COLORS.SECONDARY }}>\n          <Shield className=\"h-6 w-6 mr-3\" />\n          Face Verification\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-600 mb-4\">\n            Take a clear photo of your face for identity verification\n          </p>\n\n          {faceImage ? (\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-center\">\n                <img\n                  src={URL.createObjectURL(faceImage)}\n                  alt=\"Face verification\"\n                  className=\"w-48 h-48 object-cover rounded-xl border-2\"\n                  style={{ borderColor: COLORS.PRIMARY }}\n                />\n              </div>\n              <div className=\"flex space-x-3 justify-center\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setFaceImage(null)}\n                  className=\"rounded-xl\"\n                >\n                  Retake Photo\n                </Button>\n                <Button\n                  onClick={() => setVerificationData(prev => ({\n                    ...prev,\n                    faceVerification: true\n                  }))}\n                  className=\"rounded-xl\"\n                  style={{ backgroundColor: COLORS.PRIMARY, color: COLORS.WHITE }}\n                >\n                  Confirm Photo\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {isCameraActive ? (\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-center\">\n                    <video\n                      ref={videoRef}\n                      autoPlay\n                      playsInline\n                      className=\"w-64 h-48 object-cover rounded-xl border-2\"\n                      style={{ borderColor: COLORS.PRIMARY }}\n                    />\n                  </div>\n                  <div className=\"flex space-x-3 justify-center\">\n                    <Button\n                      variant=\"outline\"\n                      onClick={stopCamera}\n                      className=\"rounded-xl\"\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={captureFace}\n                      className=\"rounded-xl\"\n                      style={{ backgroundColor: COLORS.PRIMARY, color: COLORS.WHITE }}\n                    >\n                      <Camera className=\"h-4 w-4 mr-2\" />\n                      Capture\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <div className=\"w-64 h-48 mx-auto border-2 border-dashed rounded-xl flex items-center justify-center\" style={{ borderColor: COLORS.PRIMARY }}>\n                    <Camera className=\"h-12 w-12\" style={{ color: COLORS.PRIMARY }} />\n                  </div>\n                  <div className=\"flex space-x-3 justify-center\">\n                    <Button\n                      onClick={startCamera}\n                      className=\"rounded-xl\"\n                      style={{ backgroundColor: COLORS.PRIMARY, color: COLORS.WHITE }}\n                    >\n                      <Camera className=\"h-4 w-4 mr-2\" />\n                      Start Camera\n                    </Button>\n                    <label>\n                      <Button\n                        variant=\"outline\"\n                        className=\"rounded-xl\"\n                        asChild\n                      >\n                        <span>\n                          <Upload className=\"h-4 w-4 mr-2\" />\n                          Upload Photo\n                        </span>\n                      </Button>\n                      <input\n                        type=\"file\"\n                        className=\"hidden\"\n                        accept=\"image/*\"\n                        onChange={(e) => handleFileUpload(e, 'face')}\n                      />\n                    </label>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        <canvas ref={canvasRef} className=\"hidden\" />\n      </CardContent>\n    </Card>\n  );\n\n  const renderConsumerVerificationSteps = () => (\n    <div className=\"space-y-6\">\n      {/* Email Verification */}\n      <Card className=\"rounded-3xl border-2 shadow-xl\" style={{ borderColor: COLORS.PRIMARY }}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\" style={{ color: COLORS.SECONDARY }}>\n            <div className=\"flex items-center\">\n              <Mail className=\"h-6 w-6 mr-3\" />\n              Email Verification\n            </div>\n            {user?.isVerified ? (\n              <Badge className=\"bg-green-100 text-green-800\">\n                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                Verified\n              </Badge>\n            ) : (\n              <Badge className=\"bg-yellow-100 text-yellow-800\">\n                Pending\n              </Badge>\n            )}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {user?.isVerified ? (\n            <p className=\"text-green-600\">Your email address has been verified successfully.</p>\n          ) : (\n            <div className=\"space-y-4\">\n              <p className=\"text-gray-600\">Please check your email and click the verification link.</p>\n              <Button\n                variant=\"outline\"\n                className=\"rounded-xl\"\n                onClick={() => {/* Resend verification email */}}\n              >\n                Resend Verification Email\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Phone Verification */}\n      <Card className=\"rounded-3xl border-2 shadow-xl\" style={{ borderColor: COLORS.PRIMARY }}>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\" style={{ color: COLORS.SECONDARY }}>\n            <Phone className=\"h-6 w-6 mr-3\" />\n            Phone Verification\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-sm\">Phone: {user?.phone}</span>\n              <Badge className=\"bg-yellow-100 text-yellow-800\">\n                Pending\n              </Badge>\n            </div>\n            <Button\n              className=\"rounded-xl\"\n              style={{ backgroundColor: COLORS.PRIMARY, color: COLORS.WHITE }}\n              onClick={() => setLocation('/otp-verification?type=phone')}\n            >\n              Verify Phone Number\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('userId', user?.id.toString() || '');\n    formData.append('role', user?.role || '');\n    formData.append('verificationData', JSON.stringify(verificationData));\n\n    if (faceImage) {\n      formData.append('faceImage', faceImage);\n    }\n    if (licenseImage) {\n      formData.append('licenseImage', licenseImage);\n    }\n\n    submitVerificationMutation.mutate(formData);\n  };\n\n  const canProceed = () => {\n    if (user?.role === 'DRIVER') {\n      const data = verificationData as DriverVerification;\n      switch (currentStep) {\n        case 0:\n          return data.licenseNumber && data.licenseExpiry && licenseImage;\n        case 1:\n          return data.vehicleType && data.vehiclePlate && data.vehicleModel && data.vehicleYear;\n        case 2:\n          return data.faceVerification && faceImage;\n        default:\n          return false;\n      }\n    } else {\n      // For consumer, only face verification is the last step after email/phone\n      // We need to check if email and phone are verified before proceeding to face verification\n      const isEmailVerified = user?.isVerified;\n      const isPhoneVerified = (verificationData as ConsumerVerification).phoneVerification; // Assuming this state is updated elsewhere or via OTP flow\n\n      if (currentStep === 0) { // Email verification step\n        return isEmailVerified;\n      } else if (currentStep === 1) { // Phone verification step\n        return isPhoneVerified;\n      } else { // Face verification step\n        return (verificationData as ConsumerVerification).faceVerification && faceImage;\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-white p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\" style={{ color: COLORS.SECONDARY }}>\n            Identity Verification\n          </h1>\n          <p className=\"text-gray-600\">\n            Complete your verification to access all features\n          </p>\n\n          {/* Progress Bar */}\n          <div className=\"mt-6\">\n            <Progress value={verificationProgress} className=\"h-2\" />\n            <p className=\"text-sm text-gray-500 mt-2\">\n              {Math.round(verificationProgress)}% Complete\n            </p>\n          </div>\n        </div>\n\n        {/* Steps Navigation */}\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"flex space-x-4 overflow-x-auto pb-2\">\n            {steps.map((step, index) => (\n              <div\n                key={step.id}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-full border-2 cursor-pointer transition-colors duration-300 ${\n                  index === currentStep\n                    ? 'bg-blue-100 border-blue-500 text-blue-700'\n                    : step.completed || (user?.role === 'CONSUMER' && index < 2 && user?.isVerified && index === 0) || (user?.role === 'CONSUMER' && index < 2 && (verificationData as ConsumerVerification).phoneVerification && index === 1)\n                    ? 'bg-green-100 border-green-500 text-green-700'\n                    : 'bg-gray-100 border-gray-300 text-gray-600'\n                }`}\n                onClick={() => setCurrentStep(index)}\n              >\n                {step.completed || (user?.role === 'CONSUMER' && index < 2 && user?.isVerified && index === 0) || (user?.role === 'CONSUMER' && index < 2 && (verificationData as ConsumerVerification).phoneVerification && index === 1) ? (\n                  <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                ) : (\n                  <div className={`w-5 h-5 rounded-full border-2 flex items-center justify-center font-bold text-xs ${\n                    index === currentStep ? 'border-blue-500 bg-blue-500 text-white' : 'border-gray-400 text-gray-400'\n                  }`}>\n                    {index + 1}\n                  </div>\n                )}\n                <span className=\"text-sm font-medium\">\n                  {step.title}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Current Step Content */}\n        <div className=\"mb-8\">\n          {user?.role === 'DRIVER' ? (\n            <>\n              {currentStep === 0 && renderDriverLicenseStep()}\n              {currentStep === 1 && renderVehicleRegistrationStep()}\n              {currentStep === 2 && renderFaceVerificationStep()}\n            </>\n          ) : (\n            <>\n              {currentStep === 0 && renderConsumerVerificationSteps()}\n              {currentStep === 1 && renderConsumerVerificationSteps()}\n              {currentStep === 2 && renderFaceVerificationStep()}\n            </>\n          )}\n        </div>\n\n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between\">\n          <Button\n            variant=\"outline\"\n            onClick={() => currentStep > 0 ? setCurrentStep(currentStep - 1) : setLocation(user?.role === 'DRIVER' ? '/driver-dashboard' : '/consumer-home')}\n            className=\"rounded-xl\"\n            disabled={currentStep === 0}\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {currentStep === 0 ? 'Back to Dashboard' : 'Previous'}\n          </Button>\n\n          {currentStep < steps.length - 1 ? (\n            <Button\n              onClick={() => {\n                // Mark current step as completed before moving to the next\n                const newSteps = [...steps];\n                newSteps[currentStep].completed = true;\n                setVerificationProgress((newSteps.filter(s => s.completed).length / newSteps.length) * 100);\n                setCurrentStep(currentStep + 1);\n              }}\n              disabled={!canProceed()}\n              className=\"rounded-xl\"\n              style={{ backgroundColor: COLORS.PRIMARY, color: COLORS.WHITE }}\n            >\n              Next\n              <ArrowRight className=\"h-4 w-4 ml-2\" />\n            </Button>\n          ) : (\n            <Button\n              onClick={handleSubmit}\n              disabled={!canProceed() || submitVerificationMutation.isPending}\n              className=\"rounded-xl\"\n              style={{ backgroundColor: COLORS.ACTIVE, color: COLORS.WHITE }}\n            >\n              {submitVerificationMutation.isPending ? 'Submitting...' : 'Complete Verification'}\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["ArrowRight","createLucideIcon","COLORS","IdentityVerification","setLocation","useLocation","user","useAuth","currentStep","setCurrentStep","useState","verificationData","setVerificationData","faceImage","setFaceImage","licenseImage","setLicenseImage","videoRef","useRef","canvasRef","isCameraActive","setIsCameraActive","verificationProgress","setVerificationProgress","driverSteps","consumerSteps","steps","vehicleTypes","startCamera","stream","error","stopCamera","_a","track","captureFace","canvas","video","context","blob","file","handleFileUpload","event","type","submitVerificationMutation","useMutation","data","apiRequest","useEffect","completedSteps","step","renderDriverLicenseStep","jsxs","Card","jsx","CardHeader","CardTitle","FileText","CardContent","Label","Input","e","prev","CheckCircle","Button","XCircle","Upload","renderVehicleRegistrationStep","Car","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","renderFaceVerificationStep","Shield","Camera","renderConsumerVerificationSteps","Mail","Badge","Phone","handleSubmit","formData","canProceed","isEmailVerified","isPhoneVerified","Progress","index","Fragment","ArrowLeft","newSteps","s"],"mappings":"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","x_google_ignoreList":[0]}
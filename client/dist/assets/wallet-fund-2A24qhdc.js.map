{"version":3,"file":"wallet-fund-2A24qhdc.js","sources":["../../src/pages/wallet-fund.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft, Plus, CreditCard } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport masterCardLogo from \"../assets/images/master_card_logo.png\";\nimport visaCardLogo from \"../assets/images/visa_card_logo.png\";\n\nconst fundingAmounts = [1000, 2500, 5000, 10000, 25000, 50000];\n\nexport default function WalletFund() {\n  const [, setLocation] = useLocation();\n  const [selectedAmount, setSelectedAmount] = useState<number | null>(null);\n  const [customAmount, setCustomAmount] = useState(\"\");\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const paymentMethods = [\n    {\n      id: \"card1\",\n      type: \"Mastercard\",\n      number: \"**** **** **** 4532\",\n      logo: masterCardLogo\n    },\n    {\n      id: \"card2\",\n      type: \"Visa\",\n      number: \"**** **** **** 8901\",\n      logo: visaCardLogo\n    }\n  ];\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-NG', {\n      style: 'currency',\n      currency: 'NGN',\n      minimumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const getFinalAmount = () => {\n    if (customAmount) {\n      return parseInt(customAmount);\n    }\n    return selectedAmount || 0;\n  };\n\n  const handleFundWallet = async () => {\n    const amount = getFinalAmount();\n    if (amount > 0 && selectedPaymentMethod) {\n      try {\n        setIsLoading(true);\n        \n        // Initialize payment with wallet funding API\n        const response = await fetch('/api/wallet/fund', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            amount,\n            paymentMethod: selectedPaymentMethod,\n            reference: `fund_${Date.now()}`\n          }),\n        });\n\n        const result = await response.json();\n\n        if (response.ok) {\n          // Show success message and redirect\n          alert(`Wallet funding initiated! Amount: ${formatCurrency(amount)}`);\n          setLocation('/wallet-fund/callback?status=success&amount=' + amount);\n        } else {\n          throw new Error(result.message || 'Payment initialization failed');\n        }\n      } catch (error: any) {\n        console.error('Payment error:', error);\n        alert(error.message || 'Payment failed. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 w-full max-w-sm sm:max-w-md md:max-w-lg lg:max-w-xl xl:max-w-2xl mx-auto px-2 sm:px-4\">{/*Responsive container*/}\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b p-4\">\n        <div className=\"flex items-center space-x-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => setLocation(\"/consumer-home\")}\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Button>\n          <h1 className=\"text-lg font-semibold text-[#131313]\">Add Money</h1>\n        </div>\n      </div>\n\n      <div className=\"p-4 space-y-6\">\n        {/* Quick Amount Selection */}\n        <Card>\n          <CardContent className=\"p-6\">\n            <h3 className=\"font-semibold text-[#131313] mb-4\">Select Amount</h3>\n            <div className=\"grid grid-cols-3 gap-3 mb-4\">\n              {fundingAmounts.map((amount) => (\n                <Button\n                  key={amount}\n                  variant={selectedAmount === amount ? \"default\" : \"outline\"}\n                  className={`h-12 ${\n                    selectedAmount === amount \n                      ? \"bg-[#4682b4] text-white\" \n                      : \"border-[#4682b4] text-[#4682b4] hover:bg-[#4682b4]/10\"\n                  }`}\n                  onClick={() => {\n                    setSelectedAmount(amount);\n                    setCustomAmount(\"\");\n                  }}\n                >\n                  {formatCurrency(amount)}\n                </Button>\n              ))}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"custom-amount\" className=\"text-sm font-medium\">\n                Or enter custom amount\n              </Label>\n              <Input\n                id=\"custom-amount\"\n                type=\"number\"\n                placeholder=\"Enter amount\"\n                value={customAmount}\n                onChange={(e) => {\n                  setCustomAmount(e.target.value);\n                  setSelectedAmount(null);\n                }}\n                className=\"border-[#4682b4]/30 focus:border-[#4682b4]\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Payment Methods */}\n        <Card>\n          <CardContent className=\"p-6\">\n            <h3 className=\"font-semibold text-[#131313] mb-4\">Payment Method</h3>\n            <div className=\"space-y-3\">\n              {paymentMethods.map((method) => (\n                <div\n                  key={method.id}\n                  className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                    selectedPaymentMethod === method.id\n                      ? \"border-[#4682b4] bg-[#4682b4]/5\"\n                      : \"border-gray-200 hover:border-[#4682b4]/50\"\n                  }`}\n                  onClick={() => setSelectedPaymentMethod(method.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <img src={method.logo} alt={method.type} className=\"w-8 h-5\" />\n                      <div>\n                        <p className=\"font-medium text-[#131313]\">{method.type}</p>\n                        <p className=\"text-sm text-gray-600\">{method.number}</p>\n                      </div>\n                    </div>\n                    <div className={`w-4 h-4 rounded-full border-2 ${\n                      selectedPaymentMethod === method.id\n                        ? \"border-[#4682b4] bg-[#4682b4]\"\n                        : \"border-gray-300\"\n                    }`}>\n                      {selectedPaymentMethod === method.id && (\n                        <div className=\"w-full h-full rounded-full bg-white transform scale-50\"></div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              <Button\n                variant=\"outline\"\n                className=\"w-full h-16 border-dashed border-[#4682b4] text-[#4682b4] hover:bg-[#4682b4]/10\"\n                onClick={() => setLocation(\"/payment-methods/add\")}\n              >\n                <Plus className=\"w-5 h-5 mr-2\" />\n                Add New Card\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Transaction Summary */}\n        {(selectedAmount || customAmount) && (\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"font-semibold text-[#131313] mb-4\">Transaction Summary</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Amount</span>\n                  <span className=\"font-medium\">{formatCurrency(getFinalAmount())}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Transaction Fee</span>\n                  <span className=\"font-medium\">â‚¦0.00</span>\n                </div>\n                <hr />\n                <div className=\"flex justify-between font-semibold text-lg\">\n                  <span>Total</span>\n                  <span className=\"text-[#4682b4]\">{formatCurrency(getFinalAmount())}</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n\n      {/* Bottom Button */}\n      <div className=\"fixed bottom-0 left-0 right-0 p-4 bg-white border-t\">\n        <Button\n          className=\"w-full h-12 bg-[#4682b4] hover:bg-[#0b1a51]\"\n          onClick={handleFundWallet}\n          disabled={!getFinalAmount() || !selectedPaymentMethod}\n        >\n          <CreditCard className=\"w-5 h-5 mr-2\" />\n          Fund Wallet\n        </Button>\n      </div>\n    </div>\n  );\n}"],"names":["fundingAmounts","WalletFund","setLocation","useLocation","selectedAmount","setSelectedAmount","useState","customAmount","setCustomAmount","selectedPaymentMethod","setSelectedPaymentMethod","isLoading","setIsLoading","paymentMethods","masterCardLogo","visaCardLogo","formatCurrency","amount","getFinalAmount","handleFundWallet","response","result","error","jsxs","jsx","Button","ArrowLeft","Card","CardContent","Label","Input","e","method","Plus","CreditCard"],"mappings":"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"}
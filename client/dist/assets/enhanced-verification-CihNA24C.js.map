{"version":3,"file":"enhanced-verification-CihNA24C.js","sources":["../../src/pages/enhanced-verification.tsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/use-auth';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';\nimport { Button } from '../components/ui/button';\nimport { Input } from '../components/ui/input';\nimport { Label } from '../components/ui/label';\nimport { Badge } from '../components/ui/badge';\nimport { Progress } from '../components/ui/progress';\nimport { \n  CheckCircle, \n  Upload, \n  Camera, \n  FileText, \n  Shield, \n  Fingerprint,\n  Eye,\n  AlertCircle,\n  Star\n} from 'lucide-react';\nimport { useToast } from '../hooks/use-toast';\n\nconst COLORS = {\n  PRIMARY: '#4682b4',\n  SECONDARY: '#131313',\n  SUCCESS: '#10b981',\n  WARNING: '#f59e0b',\n  ERROR: '#ef4444'\n};\n\ninterface VerificationStatus {\n  overall: {\n    isVerified: boolean;\n    level: string;\n    progress: number;\n  };\n  email: {\n    verified: boolean;\n    email: string;\n  };\n  phone: {\n    verified: boolean;\n    phone: string;\n  };\n  biometric: {\n    verified: boolean;\n    type?: string;\n  };\n  documents: Array<{\n    id: number;\n    type: string;\n    status: string;\n    validationScore: number;\n    uploadedAt: string;\n    expiryDate?: string;\n  }>;\n  requiredSteps: string[];\n}\n\nexport default function EnhancedVerificationPage() {\n  const { user } = useAuth();\n  const { toast } = useToast();\n  const [verificationStatus, setVerificationStatus] = useState<VerificationStatus | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [documentType, setDocumentType] = useState<string>('');\n  const [documentNumber, setDocumentNumber] = useState<string>('');\n  const [expiryDate, setExpiryDate] = useState<string>('');\n  const [biometricData, setBiometricData] = useState<string>('');\n\n  useEffect(() => {\n    fetchVerificationStatus();\n  }, []);\n\n  const fetchVerificationStatus = async () => {\n    try {\n      const response = await fetch('/api/verification-enhanced/status', {\n        credentials: 'include'\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setVerificationStatus(data.verification);\n      }\n    } catch (error) {\n      console.error('Failed to fetch verification status:', error);\n    }\n  };\n\n  const handleDocumentUpload = async () => {\n    if (!selectedFile || !documentType || !documentNumber) {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please select a file, document type, and number\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('document', selectedFile);\n    formData.append('documentType', documentType);\n    formData.append('documentNumber', documentNumber);\n    if (expiryDate) formData.append('expiryDate', expiryDate);\n\n    try {\n      const response = await fetch('/api/verification-enhanced/documents/upload', {\n        method: 'POST',\n        credentials: 'include',\n        body: formData\n      });\n\n      const data = await response.json();\n      \n      if (data.success) {\n        toast({\n          title: \"Document Uploaded\",\n          description: `Document uploaded with ${Math.round(data.document.validationScore * 100)}% confidence`,\n          variant: \"default\"\n        });\n        \n        // Reset form\n        setSelectedFile(null);\n        setDocumentType('');\n        setDocumentNumber('');\n        setExpiryDate('');\n        \n        // Refresh status\n        fetchVerificationStatus();\n      } else {\n        throw new Error(data.message);\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Upload Failed\",\n        description: error.message || \"Failed to upload document\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBiometricVerification = async (biometricType: 'FACE' | 'FINGERPRINT') => {\n    if (!biometricData) {\n      // Simulate biometric capture\n      setBiometricData(btoa(Math.random().toString()));\n      \n      toast({\n        title: \"Biometric Captured\",\n        description: \"Biometric data captured successfully\",\n        variant: \"default\"\n      });\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch('/api/verification-enhanced/biometric/verify', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          biometricType,\n          biometricData,\n          deviceInfo: {\n            deviceId: navigator.userAgent,\n            platform: navigator.platform,\n            version: '1.0.0'\n          }\n        })\n      });\n\n      const data = await response.json();\n      \n      if (data.success) {\n        toast({\n          title: \"Biometric Verified\",\n          description: `${biometricType} verification completed successfully`,\n          variant: \"default\"\n        });\n        \n        setBiometricData('');\n        fetchVerificationStatus();\n      } else {\n        throw new Error(data.message);\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Verification Failed\",\n        description: error.message || \"Biometric verification failed\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getVerificationLevelColor = (level: string) => {\n    switch (level) {\n      case 'PREMIUM': return COLORS.SUCCESS;\n      case 'STANDARD': return COLORS.PRIMARY;\n      case 'BASIC': return COLORS.WARNING;\n      default: return COLORS.ERROR;\n    }\n  };\n\n  const getVerificationLevelIcon = (level: string) => {\n    switch (level) {\n      case 'PREMIUM': return <Star className=\"h-5 w-5\" />;\n      case 'STANDARD': return <Shield className=\"h-5 w-5\" />;\n      case 'BASIC': return <CheckCircle className=\"h-5 w-5\" />;\n      default: return <AlertCircle className=\"h-5 w-5\" />;\n    }\n  };\n\n  if (!verificationStatus) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-white p-4 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-white p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\" style={{ color: COLORS.SECONDARY }}>\n            Enhanced Verification\n          </h1>\n          <p className=\"text-gray-600\">\n            Complete advanced verification for maximum security and benefits\n          </p>\n          \n          {/* Verification Level Badge */}\n          <div className=\"mt-4 flex justify-center\">\n            <Badge \n              className=\"px-4 py-2 text-sm font-medium flex items-center\"\n              style={{ \n                backgroundColor: `${getVerificationLevelColor(verificationStatus.overall.level)}20`,\n                color: getVerificationLevelColor(verificationStatus.overall.level),\n                border: `1px solid ${getVerificationLevelColor(verificationStatus.overall.level)}40`\n              }}\n            >\n              {getVerificationLevelIcon(verificationStatus.overall.level)}\n              <span className=\"ml-2\">{verificationStatus.overall.level} Level</span>\n            </Badge>\n          </div>\n          \n          {/* Progress Bar */}\n          <div className=\"mt-6 max-w-md mx-auto\">\n            <Progress value={verificationStatus.overall.progress} className=\"h-3\" />\n            <p className=\"text-sm text-gray-500 mt-2\">\n              {Math.round(verificationStatus.overall.progress)}% Complete\n            </p>\n          </div>\n        </div>\n\n        {/* Document Upload Section */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\" style={{ color: COLORS.SECONDARY }}>\n              <FileText className=\"h-6 w-6 mr-3\" />\n              Document Verification\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {/* Document Type Selection */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <Label htmlFor=\"documentType\">Document Type</Label>\n                <select\n                  id=\"documentType\"\n                  value={documentType}\n                  onChange={(e) => setDocumentType(e.target.value)}\n                  className=\"w-full p-3 border rounded-xl\"\n                >\n                  <option value=\"\">Select Document</option>\n                  <option value=\"LICENSE\">Driver's License</option>\n                  <option value=\"NIN\">National ID (NIN)</option>\n                  <option value=\"PASSPORT\">International Passport</option>\n                  <option value=\"VEHICLE_REGISTRATION\">Vehicle Registration</option>\n                </select>\n              </div>\n              \n              <div>\n                <Label htmlFor=\"documentNumber\">Document Number</Label>\n                <Input\n                  id=\"documentNumber\"\n                  value={documentNumber}\n                  onChange={(e) => setDocumentNumber(e.target.value)}\n                  placeholder=\"Enter document number\"\n                  className=\"rounded-xl\"\n                />\n              </div>\n              \n              <div>\n                <Label htmlFor=\"expiryDate\">Expiry Date (Optional)</Label>\n                <Input\n                  id=\"expiryDate\"\n                  type=\"date\"\n                  value={expiryDate}\n                  onChange={(e) => setExpiryDate(e.target.value)}\n                  className=\"rounded-xl\"\n                />\n              </div>\n            </div>\n\n            {/* File Upload */}\n            <div className=\"border-2 border-dashed border-gray-300 rounded-xl p-6 text-center\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => setSelectedFile(e.target.files?.[0] || null)}\n                className=\"hidden\"\n                id=\"document-upload\"\n              />\n              <label htmlFor=\"document-upload\" className=\"cursor-pointer\">\n                <Upload className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\n                <p className=\"text-gray-600\">\n                  {selectedFile ? selectedFile.name : \"Click to upload document image\"}\n                </p>\n                <p className=\"text-sm text-gray-500 mt-2\">\n                  PNG, JPG, JPEG up to 5MB\n                </p>\n              </label>\n            </div>\n\n            <Button\n              onClick={handleDocumentUpload}\n              disabled={loading || !selectedFile || !documentType || !documentNumber}\n              className=\"w-full rounded-xl\"\n              style={{ backgroundColor: COLORS.PRIMARY }}\n            >\n              {loading ? \"Uploading...\" : \"Upload Document\"}\n            </Button>\n          </CardContent>\n        </Card>\n\n        {/* Biometric Verification Section */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\" style={{ color: COLORS.SECONDARY }}>\n              <Fingerprint className=\"h-6 w-6 mr-3\" />\n              Biometric Verification\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Face Recognition */}\n              <div className=\"border rounded-xl p-6 text-center\">\n                <Eye className=\"h-12 w-12 mx-auto text-blue-500 mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Face Recognition</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">\n                  Verify your identity using facial recognition\n                </p>\n                <Button\n                  onClick={() => handleBiometricVerification('FACE')}\n                  disabled={loading}\n                  className=\"w-full rounded-xl\"\n                  variant={verificationStatus.biometric.verified ? \"outline\" : \"default\"}\n                  style={!verificationStatus.biometric.verified ? { backgroundColor: COLORS.PRIMARY } : {}}\n                >\n                  {verificationStatus.biometric.verified ? \"✓ Verified\" : \n                   biometricData ? \"Complete Verification\" : \"Capture Face\"}\n                </Button>\n              </div>\n\n              {/* Fingerprint */}\n              <div className=\"border rounded-xl p-6 text-center\">\n                <Fingerprint className=\"h-12 w-12 mx-auto text-blue-500 mb-4\" />\n                <h3 className=\"font-semibold mb-2\">Fingerprint</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">\n                  Secure verification using fingerprint\n                </p>\n                <Button\n                  onClick={() => handleBiometricVerification('FINGERPRINT')}\n                  disabled={loading}\n                  className=\"w-full rounded-xl\"\n                  variant={verificationStatus.biometric.verified ? \"outline\" : \"default\"}\n                  style={!verificationStatus.biometric.verified ? { backgroundColor: COLORS.PRIMARY } : {}}\n                >\n                  {verificationStatus.biometric.verified ? \"✓ Verified\" : \n                   biometricData ? \"Complete Verification\" : \"Scan Fingerprint\"}\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Verification Status Overview */}\n        <Card>\n          <CardHeader>\n            <CardTitle style={{ color: COLORS.SECONDARY }}>Verification Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {/* Current Documents */}\n              {verificationStatus.documents.length > 0 && (\n                <div>\n                  <h4 className=\"font-semibold mb-3\">Uploaded Documents</h4>\n                  <div className=\"space-y-2\">\n                    {verificationStatus.documents.map((doc) => (\n                      <div key={doc.id} className=\"flex justify-between items-center p-3 border rounded-lg\">\n                        <div>\n                          <span className=\"font-medium\">{doc.type.replace('_', ' ')}</span>\n                          <p className=\"text-sm text-gray-600\">\n                            Confidence: {Math.round(doc.validationScore * 100)}%\n                          </p>\n                        </div>\n                        <Badge\n                          variant={doc.status === 'VERIFIED' ? 'default' : 'secondary'}\n                          style={{\n                            backgroundColor: doc.status === 'VERIFIED' ? COLORS.SUCCESS : COLORS.WARNING,\n                            color: 'white'\n                          }}\n                        >\n                          {doc.status}\n                        </Badge>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Required Steps */}\n              {verificationStatus.requiredSteps.length > 0 && (\n                <div>\n                  <h4 className=\"font-semibold mb-3\">Remaining Steps</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                    {verificationStatus.requiredSteps.map((step) => (\n                      <div key={step} className=\"flex items-center p-2 border rounded-lg\">\n                        <AlertCircle className=\"h-4 w-4 text-orange-500 mr-2\" />\n                        <span className=\"text-sm\">{step.replace('_', ' ')}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":["COLORS","EnhancedVerificationPage","user","useAuth","toast","useToast","verificationStatus","setVerificationStatus","useState","loading","setLoading","selectedFile","setSelectedFile","documentType","setDocumentType","documentNumber","setDocumentNumber","expiryDate","setExpiryDate","biometricData","setBiometricData","useEffect","fetchVerificationStatus","response","data","error","handleDocumentUpload","formData","handleBiometricVerification","biometricType","getVerificationLevelColor","level","getVerificationLevelIcon","jsx","Star","Shield","CheckCircle","AlertCircle","jsxs","Badge","Progress","Card","CardHeader","CardTitle","FileText","CardContent","Label","e","Input","_a","Upload","Button","Fingerprint","Eye","doc","step"],"mappings":"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"}
{"version":3,"file":"chat-c3l2tgug.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/image.js","../../src/pages/chat.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Image = createLucideIcon(\"Image\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n]);\n\nexport { Image as default };\n//# sourceMappingURL=image.js.map\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useWebSocketChat } from \"@/hooks/use-websocket\";\nimport { ClientRole, MessageType } from \"../../../server/websocket\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  ArrowLeft, \n  MessageCircle, \n  Send,\n  Package, \n  Clock,\n  CheckCircle,\n  Phone,\n  Mail,\n  Camera,\n  FileText,\n  Image,\n  X\n} from \"lucide-react\";\n// @ts-ignore\nimport accountCircleIcon from \"../assets/images/account_circle.svg\";\n// @ts-ignore\nimport cameraIcon from \"../assets/images/camera_icon.png\";\n\n// Color constants\nconst COLORS = {\n  PRIMARY: '#4682b4',\n  SECONDARY: '#0b1a51', \n  ACTIVE: '#010e42',\n  TEXT: '#131313',\n  WHITE: '#ffffff'\n} as const;\n\ninterface ChatMessage {\n  id: string;\n  conversationId: string;\n  senderId: number;\n  senderName: string;\n  senderRole: string;\n  content: string;\n  messageType: \"TEXT\" | \"QUOTE_REQUEST\" | \"QUOTE_RESPONSE\" | \"ORDER_UPDATE\";\n  attachedData?: any;\n  createdAt: Date;\n}\n\ninterface Conversation {\n  id: string;\n  customerId: number;\n  vendorId: number;\n  driverId?: number;\n  productId?: string;\n  conversationType: \"QUOTE\" | \"ORDER\" | \"PICKUP\" | \"DELIVERY\" | \"GENERAL\";\n  status: \"ACTIVE\" | \"CLOSED\";\n  customerName: string;\n  vendorName: string;\n  driverName?: string;\n  customerPhoto?: string;\n  vendorPhoto?: string;\n  driverPhoto?: string;\n  productName?: string;\n  lastMessage?: string;\n  lastMessageAt: Date;\n  createdAt: Date;\n}\n\nexport default function ChatPage() {\n  const [, setLocation] = useLocation();\n  const { user } = useAuth();\n  const queryClient = useQueryClient();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [showChatScreen, setShowChatScreen] = useState(false);\n  const [showImageMenu, setShowImageMenu] = useState(false);\n  const [showCallMenu, setShowCallMenu] = useState(false);\n  const [showProfileDetails, setShowProfileDetails] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // WebSocket integration for real-time chat\n  const { connected: wsConnected, chatMessages: wsMessages, sendChatMessage, connectionError: wsError } = useWebSocketChat();\n\n  // Get conversations for current user based on role\n  const { data: conversations = [], isLoading: loadingConversations } = useQuery({\n    queryKey: ['/api/conversations', user?.id, user?.role],\n    queryFn: async () => {\n      const response = await fetch(`/api/conversations?userId=${user?.id}&role=${user?.role}`);\n      if (!response.ok) throw new Error('Failed to fetch conversations');\n      return response.json();\n    },\n    enabled: !!user?.id\n  });\n\n  // Get messages for selected conversation\n  const { data: messages = [], isLoading: loadingMessages } = useQuery({\n    queryKey: ['/api/conversations', selectedConversation, 'messages'],\n    queryFn: async () => {\n      const response = await fetch(`/api/conversations/${selectedConversation}/messages`);\n      if (!response.ok) throw new Error('Failed to fetch messages');\n      return response.json();\n    },\n    enabled: !!selectedConversation\n  });\n\n  // Send message mutation\n  const sendMessageMutation = useMutation({\n    mutationFn: async (data: { conversationId: string; content: string; messageType?: string }) => {\n      const response = await fetch('/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...data,\n          senderId: user?.id\n        })\n      });\n      if (!response.ok) throw new Error('Failed to send message');\n      return response.json();\n    },\n    onSuccess: (data: ChatMessage) => {\n      // Update queries to refresh the UI\n      queryClient.invalidateQueries({ queryKey: ['/api/conversations', selectedConversation, 'messages'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/conversations', user?.id] });\n      setNewMessage(\"\");\n\n      // Also send via WebSocket for real-time delivery\n      if (selectedConversation) {\n        const conversation = conversations.find((c: Conversation) => c.id === selectedConversation);\n        if (conversation) {\n          // Determine recipient based on user role\n          let recipientId: string;\n          let recipientRole: ClientRole;\n\n          if (user?.role === \"CONSUMER\") {\n            recipientId = conversation.vendorId.toString();\n            recipientRole = ClientRole.MERCHANT;\n          } else if (user?.role === \"MERCHANT\") {\n            recipientId = conversation.customerId.toString();\n            recipientRole = ClientRole.CONSUMER;\n          } else if (user?.role === \"DRIVER\") {\n            // For drivers, determine if they're talking to merchant or consumer\n            if (conversation.conversationType === \"PICKUP\") {\n              recipientId = conversation.vendorId.toString();\n              recipientRole = ClientRole.MERCHANT;\n            } else {\n              recipientId = conversation.customerId.toString();\n              recipientRole = ClientRole.CONSUMER;\n            }\n          } else {\n            // Default fallback\n            recipientId = conversation.customerId.toString();\n            recipientRole = ClientRole.CONSUMER;\n          }\n\n          // Send the message via WebSocket\n          sendChatMessage(recipientId, recipientRole, data.content);\n        }\n      }\n    }\n  });\n\n  // Process WebSocket messages and add them to the UI\n  useEffect(() => {\n    if (wsMessages.length > 0 && selectedConversation) {\n      // Find new messages for the current conversation\n      const newWsMessages = wsMessages.filter((msg: { type: MessageType; senderId: string; recipientId?: string }) => {\n        // Check if this message belongs to the current conversation\n        // In a real app, you would have a more robust way to match messages to conversations\n        return msg.type === MessageType.CHAT_MESSAGE && \n               (msg.senderId === String(user?.id) || msg.recipientId === String(user?.id));\n      });\n\n      if (newWsMessages.length > 0) {\n        // Refresh the messages query to include the new WebSocket messages\n        queryClient.invalidateQueries({ queryKey: ['/api/conversations', selectedConversation, 'messages'] });\n      }\n    }\n  }, [wsMessages, selectedConversation, user?.id, queryClient]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n\n    sendMessageMutation.mutate({\n      conversationId: selectedConversation,\n      content: newMessage.trim(),\n      messageType: \"TEXT\"\n    });\n  };\n\n  const handleConversationClick = (conversationId: string) => {\n    setSelectedConversation(conversationId);\n    setShowChatScreen(true);\n  };\n\n  const handleBackToList = () => {\n    setShowChatScreen(false);\n    setSelectedConversation(null);\n    setShowImageMenu(false);\n    setShowCallMenu(false);\n    setShowProfileDetails(false);\n  };\n\n  const handleImageMenuOption = (option: 'camera' | 'photo' | 'document') => {\n    setShowImageMenu(false);\n    switch(option) {\n      case 'camera':\n        // Trigger camera capture\n        console.log('Opening camera...');\n        break;\n      case 'photo':\n        // Trigger photo picker\n        console.log('Opening photo gallery...');\n        break;\n      case 'document':\n        // Trigger document picker\n        console.log('Opening document picker...');\n        break;\n    }\n  };\n\n  const handleCallOption = (option: 'in-app' | 'cellular') => {\n    setShowCallMenu(false);\n    switch(option) {\n      case 'in-app':\n        console.log('Starting in-app call...');\n        break;\n      case 'cellular':\n        console.log('Starting cellular call...');\n        break;\n    }\n  };\n\n  if (!user) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen\" style={{ backgroundColor: COLORS.WHITE }}>\n        <h1 className=\"text-2xl font-bold mb-4\" style={{ color: COLORS.TEXT }}>Please Sign In</h1>\n        <p className=\"mb-4\" style={{ color: COLORS.TEXT + '80' }}>You need to be signed in to access chat</p>\n        <Button \n          onClick={() => setLocation('/signin')}\n          className=\"rounded-3xl py-3 px-6\"\n          style={{ backgroundColor: COLORS.PRIMARY, color: COLORS.WHITE }}\n        >\n          Sign In\n        </Button>\n      </div>\n    );\n  }\n\n  // Show conversation list first\n  if (!showChatScreen) {\n    return (\n      <div className=\"min-h-screen\" style={{ backgroundColor: '#F8F9FA' }}>\n        {/* Header */}\n        <div className=\"p-6 pb-4\" style={{ backgroundColor: COLORS.WHITE }}>\n          <div className=\"flex items-center justify-between\">\n            <Button \n              variant=\"ghost\" \n              onClick={() => setLocation('/dashboard')}\n              className=\"p-2 rounded-2xl hover:bg-gray-100\"\n            >\n              <ArrowLeft className=\"h-6 w-6\" style={{ color: COLORS.TEXT }} />\n            </Button>\n            <h1 className=\"text-2xl font-bold\" style={{ color: COLORS.TEXT }}>Messages</h1>\n            <div className=\"w-10\"></div>\n          </div>\n        </div>\n\n        {/* Conversations List */}\n        <div className=\"px-4 pb-6\">\n          {loadingConversations ? (\n            <div className=\"p-8 text-center\" style={{ color: COLORS.TEXT + '80' }}>\n              <MessageCircle className=\"h-12 w-12 mx-auto mb-4\" style={{ color: COLORS.PRIMARY }} />\n              <p>Loading conversations...</p>\n            </div>\n          ) : conversations.length === 0 ? (\n            <div className=\"p-8 text-center\" style={{ color: COLORS.TEXT + '80' }}>\n              <MessageCircle className=\"h-16 w-16 mx-auto mb-4\" style={{ color: COLORS.PRIMARY + '40' }} />\n              <h3 className=\"text-lg font-medium mb-2\" style={{ color: COLORS.TEXT }}>No conversations yet</h3>\n              <p>\n                {user?.role === \"CONSUMER\" && \"Start shopping to connect with merchants\"}\n                {user?.role === \"MERCHANT\" && \"Customers will contact you about quotes and orders\"}\n                {user?.role === \"DRIVER\" && \"You'll receive pickup and delivery requests here\"}\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {conversations.map((conv: Conversation) => (\n                <div\n                  key={conv.id}\n                  onClick={() => handleConversationClick(conv.id)}\n                  className=\"rounded-3xl p-4 cursor-pointer transition-all duration-200 hover:shadow-lg card-3d\"\n                  style={{ \n                    backgroundColor: COLORS.WHITE,\n                    border: `1px solid #E5E7EB`\n                  }}\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    {/* Profile Avatar */}\n                    <div className=\"relative\">\n                      <div \n                        className=\"w-16 h-16 rounded-full overflow-hidden border-2\"\n                        style={{ borderColor: COLORS.PRIMARY + '40' }}\n                      >\n                        {(() => {\n                          let profilePhoto = null;\n                          if (user?.role === \"CONSUMER\") {\n                            profilePhoto = conv.vendorPhoto;\n                          } else if (user?.role === \"MERCHANT\") {\n                            profilePhoto = conv.customerPhoto;\n                          } else if (user?.role === \"DRIVER\") {\n                            profilePhoto = conv.conversationType === \"PICKUP\" ? conv.vendorPhoto : conv.customerPhoto;\n                          }\n\n                          return profilePhoto ? (\n                            <img \n                              src={profilePhoto} \n                              alt=\"Profile\" \n                              className=\"w-full h-full object-cover\"\n                            />\n                          ) : (\n                            <div \n                              className=\"w-full h-full flex items-center justify-center\"\n                              style={{ backgroundColor: COLORS.PRIMARY + '20' }}\n                            >\n                              <img \n                                src={accountCircleIcon} \n                                alt=\"Profile\" \n                                className=\"w-12 h-12\"\n                                style={{ filter: `brightness(0) saturate(100%) invert(27%) sepia(51%) saturate(2878%) hue-rotate(176deg) brightness(102%) contrast(97%)` }}\n                              />\n                            </div>\n                          );\n                        })()}\n                      </div>\n                      {/* Online indicator */}\n                      <div \n                        className=\"absolute -bottom-1 -right-1 w-5 h-5 rounded-full border-2\"\n                        style={{ \n                          backgroundColor: '#10B981',\n                          borderColor: COLORS.WHITE\n                        }}\n                      ></div>\n                    </div>\n\n                    {/* Conversation Info */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <h3 className=\"font-semibold text-lg truncate\" style={{ color: COLORS.TEXT }}>\n                          {(() => {\n                            if (user?.role === \"CONSUMER\") return conv.vendorName;\n                            if (user?.role === \"MERCHANT\") return conv.customerName;\n                            if (user?.role === \"DRIVER\") {\n                              return conv.conversationType === \"PICKUP\" ? conv.vendorName : conv.customerName;\n                            }\n                            return \"Unknown\";\n                          })()}\n                        </h3>\n                        <span className=\"text-xs\" style={{ color: COLORS.TEXT + '60' }}>\n                          {new Date(conv.lastMessageAt).toLocaleDateString()}\n                        </span>\n                      </div>\n\n                      {conv.productName && (\n                        <p className=\"text-sm mb-2 truncate\" style={{ color: COLORS.PRIMARY }}>\n                          About: {conv.productName}\n                        </p>\n                      )}\n\n                      {conv.lastMessage && (\n                        <p className=\"text-sm truncate\" style={{ color: COLORS.TEXT + '70' }}>\n                          {conv.lastMessage}\n                        </p>\n                      )}\n\n                      <div className=\"flex items-center justify-between mt-2\">\n                        <Badge \n                          variant=\"default\"\n                          className=\"rounded-full px-3 py-1\"\n                          style={{ \n                            backgroundColor: (() => {\n                              switch(conv.conversationType) {\n                                case \"QUOTE\": return '#FEF3C7';\n                                case \"ORDER\": return '#DBEAFE';\n                                case \"PICKUP\": return '#FECACA';\n                                case \"DELIVERY\": return '#D1FAE5';\n                                default: return COLORS.PRIMARY + '20';\n                              }\n                            })(),\n                            color: (() => {\n                              switch(conv.conversationType) {\n                                case \"QUOTE\": return '#92400E';\n                                case \"ORDER\": return '#1E40AF';\n                                case \"PICKUP\": return '#DC2626';\n                                case \"DELIVERY\": return '#059669';\n                                default: return COLORS.PRIMARY;\n                              }\n                            })()\n                          }}\n                        >\n                          {conv.conversationType}\n                        </Badge>\n\n                        {/* Unread indicator */}\n                        <div \n                          className=\"w-3 h-3 rounded-full\"\n                          style={{ backgroundColor: COLORS.PRIMARY }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Show full chat screen when conversation is selected\n  const selectedConv = conversations.find((c: Conversation) => c.id === selectedConversation);\n\n  return (\n    <div className=\"h-screen flex flex-col\" style={{ backgroundColor: COLORS.WHITE }}>\n      {/* Chat Header */}\n      <div className=\"p-4 border-b\" style={{ borderColor: '#E5E7EB', backgroundColor: COLORS.WHITE }}>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Button \n              variant=\"ghost\" \n              onClick={handleBackToList}\n              className=\"p-2 rounded-2xl hover:bg-gray-100\"\n            >\n              <ArrowLeft className=\"h-6 w-6\" style={{ color: COLORS.TEXT }} />\n            </Button>\n\n            {selectedConv && (\n              <>\n                <div \n                  className=\"w-12 h-12 rounded-full overflow-hidden border-2 cursor-pointer hover:opacity-80\"\n                  style={{ borderColor: COLORS.PRIMARY + '40' }}\n                  onClick={() => setShowProfileDetails(!showProfileDetails)}\n                >\n                  {(() => {\n                    let profilePhoto = null;\n                    if (user?.role === \"CONSUMER\") {\n                      profilePhoto = selectedConv.vendorPhoto;\n                    } else if (user?.role === \"MERCHANT\") {\n                      profilePhoto = selectedConv.customerPhoto;\n                    } else if (user?.role === \"DRIVER\") {\n                      profilePhoto = selectedConv.conversationType === \"PICKUP\" ? selectedConv.vendorPhoto : selectedConv.customerPhoto;\n                    }\n\n                    return profilePhoto ? (\n                      <img \n                        src={profilePhoto} \n                        alt=\"Profile\" \n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      <div \n                        className=\"w-full h-full flex items-center justify-center\"\n                        style={{ backgroundColor: COLORS.PRIMARY + '20' }}\n                      >\n                        <img \n                          src={accountCircleIcon} \n                          alt=\"Profile\" \n                          className=\"w-8 h-8\"\n                          style={{ filter: `brightness(0) saturate(100%) invert(27%) sepia(51%) saturate(2878%) hue-rotate(176deg) brightness(102%) contrast(97%)` }}\n                        />\n                      </div>\n                    );\n                  })()}\n                </div>\n                <div className=\"cursor-pointer\" onClick={() => setShowProfileDetails(!showProfileDetails)}>\n                  <h2 className=\"font-semibold text-lg\" style={{ color: COLORS.TEXT }}>\n                    {(() => {\n                      if (user?.role === \"CONSUMER\") return selectedConv.vendorName;\n                      if (user?.role === \"MERCHANT\") return selectedConv.customerName;\n                      if (user?.role === \"DRIVER\") {\n                        return selectedConv.conversationType === \"PICKUP\" ? selectedConv.vendorName : selectedConv.customerName;\n                      }\n                      return \"Unknown\";\n                    })()}\n                  </h2>\n                  {selectedConv.productName && (\n                    <p className=\"text-sm\" style={{ color: COLORS.TEXT + '70' }}>About: {selectedConv.productName}</p>\n                  )}\n                  <p className=\"text-xs\" style={{ color: COLORS.PRIMARY }}>Tap to view profile</p>\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            {selectedConv && (\n              <Badge \n                variant=\"default\"\n                className=\"rounded-full\"\n                style={{ \n                  backgroundColor: (() => {\n                    switch(selectedConv.conversationType) {\n                      case \"QUOTE\": return '#FEF3C7';\n                      case \"ORDER\": return '#DBEAFE';\n                      case \"PICKUP\": return '#FECACA';\n                      case \"DELIVERY\": return '#D1FAE5';\n                      default: return COLORS.PRIMARY + '20';\n                    }\n                  })(),\n                  color: (() => {\n                    switch(selectedConv.conversationType) {\n                      case \"QUOTE\": return '#92400E';\n                      case \"ORDER\": return '#1E40AF';\n                      case \"PICKUP\": return '#DC2626';\n                      case \"DELIVERY\": return '#059669';\n                      default: return COLORS.PRIMARY;\n                    }\n                  })()\n                }}\n              >\n                {selectedConv.conversationType}\n              </Badge>\n            )}\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className=\"rounded-full p-2 relative\"\n              onClick={() => setShowCallMenu(!showCallMenu)}\n            >\n              <Phone className=\"h-5 w-5\" style={{ color: COLORS.PRIMARY }} />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"rounded-full p-2\">\n              <Mail className=\"h-5 w-5\" style={{ color: COLORS.PRIMARY }} />\n            </Button>\n          </div>\n        </div>\n\n        {/* Profile Details Modal */}\n        {showProfileDetails && selectedConv && (\n          <div className=\"absolute top-16 left-4 right-4 z-50\">\n            <div \n              className=\"rounded-3xl p-6 shadow-xl border\"\n              style={{ backgroundColor: COLORS.WHITE, borderColor: COLORS.PRIMARY + '30' }}\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold\" style={{ color: COLORS.TEXT }}>Public Profile</h3>\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  onClick={() => setShowProfileDetails(false)}\n                  className=\"rounded-full\"\n                >\n                  <X className=\"h-4 w-4\" style={{ color: COLORS.TEXT }} />\n                </Button>\n              </div>\n\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div \n                  className=\"w-16 h-16 rounded-full overflow-hidden border-2\"\n                  style={{ borderColor: COLORS.PRIMARY + '40' }}\n                >\n                  {(() => {\n                    let profilePhoto = null;\n                    if (user?.role === \"CONSUMER\") {\n                      profilePhoto = selectedConv.vendorPhoto;\n                    } else if (user?.role === \"MERCHANT\") {\n                      profilePhoto = selectedConv.customerPhoto;\n                    } else if (user?.role === \"DRIVER\") {\n                      profilePhoto = selectedConv.conversationType === \"PICKUP\" ? selectedConv.vendorPhoto : selectedConv.customerPhoto;\n                    }\n\n                    return profilePhoto ? (\n                      <img \n                        src={profilePhoto} \n                        alt=\"Profile\" \n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      <div \n                        className=\"w-full h-full flex items-center justify-center\"\n                        style={{ backgroundColor: COLORS.PRIMARY + '20' }}\n                      >\n                        <img \n                          src={accountCircleIcon} \n                          alt=\"Profile\" \n                          className=\"w-12 h-12\"\n                          style={{ filter: `brightness(0) saturate(100%) invert(27%) sepia(51%) saturate(2878%) hue-rotate(176deg) brightness(102%) contrast(97%)` }}\n                        />\n                      </div>\n                    );\n                  })()}\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-xl\" style={{ color: COLORS.TEXT }}>\n                    {(() => {\n                      if (user?.role === \"CONSUMER\") return selectedConv.vendorName;\n                      if (user?.role === \"MERCHANT\") return selectedConv.customerName;\n                      if (user?.role === \"DRIVER\") {\n                        return selectedConv.conversationType === \"PICKUP\" ? selectedConv.vendorName : selectedConv.customerName;\n                      }\n                      return \"Unknown\";\n                    })()}\n                  </h4>\n                  <p className=\"text-sm\" style={{ color: COLORS.TEXT + '70' }}>\n                    {(() => {\n                      if (user?.role === \"CONSUMER\") return \"Merchant\";\n                      if (user?.role === \"MERCHANT\") return \"Customer\";\n                      if (user?.role === \"DRIVER\") {\n                        return selectedConv.conversationType === \"PICKUP\" ? \"Merchant (Pickup)\" : \"Customer (Delivery)\";\n                      }\n                      return \"User\";\n                    })()}\n                  </p>\n                  <div className=\"flex items-center mt-1\">\n                    <div className=\"w-2 h-2 rounded-full bg-green-500 mr-2\"></div>\n                    <span className=\"text-xs\" style={{ color: COLORS.TEXT + '70' }}>Online</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <div>\n                  <p className=\"text-sm font-medium\" style={{ color: COLORS.TEXT }}>Interaction Type</p>\n                  <p className=\"text-sm\" style={{ color: COLORS.TEXT + '70' }}>\n                    {(() => {\n                      switch(selectedConv.conversationType) {\n                        case \"QUOTE\": return \"Quote Discussion\";\n                        case \"ORDER\": return \"Order Management\";\n                        case \"PICKUP\": return \"Pickup Request\";\n                        case \"DELIVERY\": return \"Delivery Service\";\n                        default: return \"General Communication\";\n                      }\n                    })()}\n                  </p>\n                </div>\n\n                {selectedConv.productName && (\n                  <div>\n                    <p className=\"text-sm font-medium\" style={{ color: COLORS.TEXT }}>Current Discussion</p>\n                    <p className=\"text-sm\" style={{ color: COLORS.PRIMARY }}>{selectedConv.productName}</p>\n                  </div>\n                )}\n\n                <div>\n                  <p className=\"text-sm font-medium\" style={{ color: COLORS.TEXT }}>Member Since</p>\n                  <p className=\"text-sm\" style={{ color: COLORS.TEXT + '70' }}>\n                    {new Date(selectedConv.createdAt).toLocaleDateString('en-US', { \n                      year: 'numeric', \n                      month: 'long' \n                    })}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Call Options Menu */}\n        {showCallMenu && (\n          <div className=\"absolute top-16 right-4 z-50\">\n            <div \n              className=\"rounded-3xl p-4 shadow-xl border min-w-48\"\n              style={{ backgroundColor: COLORS.WHITE, borderColor: COLORS.PRIMARY + '30' }}\n            >\n              <h4 className=\"text-sm font-semibold mb-3\" style={{ color: COLORS.TEXT }}>Call Options</h4>\n              <div className=\"space-y-2\">\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => handleCallOption('in-app')}\n                  className=\"w-full justify-start rounded-2xl p-3 hover:bg-gray-50\"\n                >\n                  <Phone className=\"h-4 w-4 mr-3\" style={{ color: COLORS.PRIMARY }} />\n                  <span style={{ color: COLORS.TEXT }}>In-App Call</span>\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => handleCallOption('cellular')}\n                  className=\"w-full justify-start rounded-2xl p-3 hover:bg-gray-50\"\n                >\n                  <Phone className=\"h-4 w-4 mr-3\" style={{ color: COLORS.SECONDARY }} />\n                  <span style={{ color: COLORS.TEXT }}>Cellular Call</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\" style={{ backgroundColor: '#F8F9FA' }}>\n        {/* WebSocket Connection Status */}\n        {wsConnected ? (\n          <div className=\"text-center\">\n            <Badge \n              variant=\"default\"\n              className=\"rounded-full px-3 py-1 mb-2\"\n              style={{ backgroundColor: '#D1FAE5', color: '#059669' }}\n            >\n              Real-time connected\n            </Badge>\n          </div>\n        ) : wsError ? (\n          <div className=\"text-center\">\n            <Badge \n              variant=\"default\"\n              className=\"rounded-full px-3 py-1 mb-2\"\n              style={{ backgroundColor: '#FEE2E2', color: '#DC2626' }}\n            >\n              {wsError}\n            </Badge>\n          </div>\n        ) : null}\n\n        {loadingMessages ? (\n          <div className=\"text-center py-8\" style={{ color: COLORS.TEXT + '80' }}>Loading messages...</div>\n        ) : (\n          messages.map((message: ChatMessage) => {\n            const isOwnMessage = message.senderId === user?.id;\n            return (\n              <div\n                key={message.id}\n                className={`flex ${isOwnMessage ? 'justify-end' : 'justify-start'}`}\n              >\n                <div className={`max-w-[70%] ${isOwnMessage ? 'order-2' : 'order-1'}`}>\n                  <div\n                    className=\"rounded-2xl p-4 shadow-sm\"\n                    style={{\n                      backgroundColor: isOwnMessage ? COLORS.PRIMARY : COLORS.SECONDARY,\n                      color: COLORS.WHITE,\n                      fontFamily: 'Montserrat',\n                      fontWeight: '500'\n                    }}\n                  >\n                    {message.messageType === \"QUOTE_REQUEST\" && (\n                      <div className=\"bg-yellow-50 border border-yellow-200 rounded-xl p-3 mb-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Package className=\"h-4 w-4 text-yellow-600\" />\n                          <span className=\"text-sm font-medium text-yellow-800\">Quote Request</span>\n                        </div>\n                      </div>\n                    )}\n\n                    {message.messageType === \"QUOTE_RESPONSE\" && (\n                      <div className=\"bg-green-50 border border-green-200 rounded-xl p-3 mb-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                          <span className=\"text-sm font-medium text-green-800\">Quote Response</span>\n                        </div>\n                      </div>\n                    )}\n\n                    <p className=\"text-sm leading-relaxed\">{message.content}</p>\n\n                    <div className=\"flex items-center justify-between mt-3\">\n                      <span className=\"text-xs opacity-80\">\n                        {message.senderName}\n                      </span>\n                      <span className=\"text-xs opacity-70\">\n                        {new Date(message.createdAt).toLocaleTimeString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Message Input - Enhanced Chat UI */}\n      <div className=\"p-5 relative\" style={{ backgroundColor: COLORS.WHITE }}>\n        {/* Image Options Menu */}\n        {showImageMenu && (\n          <div className=\"absolute bottom-20 right-5 z-50\">\n            <div \n              className=\"rounded-3xl p-4 shadow-xl border min-w-48\"\n              style={{ backgroundColor: COLORS.WHITE, borderColor: '#A7C7E7' }}\n            >\n              <h4 className=\"text-sm font-semibold mb-3\" style={{ color: COLORS.TEXT }}>Add Attachment</h4>\n              <div className=\"space-y-2\">\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => handleImageMenuOption('camera')}\n                  className=\"w-full justify-start rounded-2xl p-3 hover:bg-gray-50\"\n                >\n                  <Camera className=\"h-4 w-4 mr-3\" style={{ color: COLORS.PRIMARY }} />\n                  <span style={{ color: COLORS.TEXT }}>Take Photo</span>\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => handleImageMenuOption('photo')}\n                  className=\"w-full justify-start rounded-2xl p-3 hover:bg-gray-50\"\n                >\n                  <Image className=\"h-4 w-4 mr-3\" style={{ color: COLORS.PRIMARY }} />\n                  <span style={{ color: COLORS.TEXT }}>Upload Photo</span>\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => handleImageMenuOption('document')}\n                  className=\"w-full justify-start rounded-2xl p-3 hover:bg-gray-50\"\n                >\n                  <FileText className=\"h-4 w-4 mr-3\" style={{ color: COLORS.SECONDARY }} />\n                  <span style={{ color: COLORS.TEXT }}>Upload Document</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex items-center space-x-3\">\n          {/* Message Input Container with Light Blue Border */}\n          <div className=\"flex-1 relative\">\n            <div \n              className=\"rounded-3xl px-4 py-4\"\n              style={{ \n                border: '2px solid #A7C7E7',\n                backgroundColor: COLORS.WHITE\n              }}\n            >\n              <input\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Message...\"\n                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                className=\"w-full bg-transparent outline-none text-base\"\n                style={{ \n                  color: newMessage ? COLORS.TEXT : '#D9D9D9',\n                  fontFamily: 'Montserrat',\n                  fontWeight: '400'\n                }}\n              />\n            </div>\n          </div>\n\n          {/* Image/Camera Button with Round Border */}\n          <Button\n            onClick={() => setShowImageMenu(!showImageMenu)}\n            className=\"w-15 h-15 p-0 rounded-full hover:opacity-80 transition-opacity\"\n            style={{ \n              border: '2px solid #A7C7E7',\n              backgroundColor: COLORS.WHITE\n            }}\n          >\n            <img \n              src={cameraIcon} \n              alt=\"Attachment\" \n              className=\"w-10 h-10\"\n              style={{ filter: `brightness(0) saturate(100%) invert(27%) sepia(51%) saturate(2878%) hue-rotate(176deg) brightness(102%) contrast(97%)` }}\n            />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["Image","createLucideIcon","COLORS","ChatPage","setLocation","useLocation","user","useAuth","queryClient","useQueryClient","newMessage","setNewMessage","useState","selectedConversation","setSelectedConversation","showChatScreen","setShowChatScreen","showImageMenu","setShowImageMenu","showCallMenu","setShowCallMenu","showProfileDetails","setShowProfileDetails","messagesEndRef","useRef","wsConnected","wsMessages","sendChatMessage","wsError","useWebSocketChat","conversations","loadingConversations","useQuery","response","messages","loadingMessages","sendMessageMutation","useMutation","data","conversation","c","recipientId","recipientRole","ClientRole","useEffect","msg","MessageType","_a","handleSendMessage","handleConversationClick","conversationId","handleBackToList","handleImageMenuOption","option","handleCallOption","jsxs","jsx","Button","ArrowLeft","MessageCircle","conv","profilePhoto","accountCircleIcon","Badge","selectedConv","Fragment","Phone","Mail","X","message","isOwnMessage","Package","CheckCircle","Camera","FileText","e","cameraIcon"],"mappings":"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","x_google_ignoreList":[0]}
{"version":3,"file":"search-results-Cj10S1Ee.js","sources":["../../src/pages/search-results.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { ArrowLeft, Search, Filter, MapPin, Menu } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface SearchLocation {\n  id: string;\n  name: string;\n  type: \"area\" | \"station\" | \"merchant\";\n  address: string;\n  distance: number;\n  stationCount?: number;\n  averagePrice?: number;\n  isOpen?: boolean;\n  rating?: number;\n}\n\nexport default function SearchResults() {\n  const [, setLocation] = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchLocation[]>([]);\n\n  // Get search query from URL params\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const query = urlParams.get('q') || '';\n    setSearchQuery(query);\n  }, []);\n\n  // Fetch search results from API\n  const { data: searchResults = [] } = useQuery({\n    queryKey: ['/api/search', searchQuery],\n    queryFn: async () => {\n      if (!searchQuery.trim()) return [];\n      const response = await fetch(`/api/search?q=${encodeURIComponent(searchQuery)}`);\n      if (!response.ok) throw new Error('Search failed');\n      return response.json();\n    },\n    enabled: !!searchQuery.trim()\n  });\n\n  // Update results when API data changes\n  useEffect(() => {\n    setResults(searchResults);\n  }, [searchResults]);\n\n  const handleLocationSelect = (location: SearchLocation) => {\n    if (location.type === \"area\") {\n      setLocation(`/merchant-search?area=${location.id}`);\n    } else if (location.type === \"station\") {\n      setLocation(`/fuel-ordering/station/${location.id}`);\n    } else {\n      setLocation(`/merchants/${location.id}`);\n    }\n  };\n\n  const handleSearch = () => {\n    // Update results based on new search query\n    const urlParams = new URLSearchParams();\n    urlParams.set('q', searchQuery);\n    window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`);\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-NG', {\n      style: 'currency',\n      currency: 'NGN',\n      minimumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const getLocationIcon = (type: string) => {\n    switch (type) {\n      case \"area\":\n        return \"üè¢\";\n      case \"station\":\n        return \"‚õΩ\";\n      case \"merchant\":\n        return \"üè™\";\n      default:\n        return \"üìç\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Map View (Top Half) */}\n      <div className=\"h-64 bg-gradient-to-br from-blue-100 to-green-100 relative\">\n        {/* Simulated map with grid pattern */}\n        <div className=\"absolute inset-0 opacity-20\">\n          <div className=\"grid grid-cols-8 grid-rows-6 h-full w-full\">\n            {Array.from({ length: 48 }).map((_, i) => (\n              <div key={i} className=\"border border-gray-300\"></div>\n            ))}\n          </div>\n        </div>\n        \n        {/* Map pins for results */}\n        {results.slice(0, 6).map((result, index) => (\n          <div\n            key={result.id}\n            className={`absolute w-4 h-4 ${\n              result.type === \"area\" ? \"bg-blue-500\" : \"bg-red-500\"\n            } rounded-full animate-pulse`}\n            style={{\n              top: `${20 + (index * 15)}%`,\n              left: `${25 + (index * 12)}%`,\n            }}\n          ></div>\n        ))}\n        \n        {/* Header overlay */}\n        <div className=\"absolute top-0 left-0 right-0 bg-white/95 backdrop-blur-sm\">\n          <div className=\"flex items-center justify-between p-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setLocation(\"/map-home\")}\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n            </Button>\n            \n            <div className=\"flex-1 mx-4\">\n              <div className=\"flex space-x-2\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                  <Input\n                    placeholder=\"Search locations, fuel stations...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n                    className=\"pl-10 border-[#4682b4]/30 focus:border-[#4682b4]\"\n                  />\n                </div>\n                <Button\n                  onClick={() => setLocation(\"/search-filter\")}\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"border-[#4682b4] text-[#4682b4]\"\n                >\n                  <Filter className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setLocation(\"/side-menu\")}\n            >\n              <Menu className=\"w-5 h-5\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Results List (Bottom Half) */}\n      <div className=\"bg-white rounded-t-3xl -mt-6 relative z-10 min-h-[60vh]\">\n        <div className=\"p-4\">\n          {/* Handle bar */}\n          <div className=\"w-12 h-1 bg-gray-300 rounded-full mx-auto mb-4\"></div>\n          \n          {/* Results Header */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-lg font-semibold text-[#131313]\">\n              Search Results\n            </h2>\n            <Badge variant=\"outline\" className=\"text-[#4682b4] border-[#4682b4]\">\n              {results.length} found\n            </Badge>\n          </div>\n\n          {/* Results List */}\n          <div className=\"space-y-3\">\n            {results.map((location) => (\n              <Card\n                key={location.id}\n                className=\"cursor-pointer transition-transform hover:scale-[1.02]\"\n                onClick={() => handleLocationSelect(location)}\n              >\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3 flex-1\">\n                      <div className=\"w-10 h-10 bg-[#4682b4]/10 rounded-full flex items-center justify-center\">\n                        <span className=\"text-lg\">{getLocationIcon(location.type)}</span>\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-[#131313] mb-1\">\n                          {location.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-600 mb-2\">\n                          {location.address}\n                        </p>\n                        <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                          <div className=\"flex items-center space-x-1\">\n                            <MapPin className=\"w-3 h-3\" />\n                            <span>{location.distance} km away</span>\n                          </div>\n                          {location.type === \"area\" && location.stationCount && (\n                            <span>{location.stationCount} stations</span>\n                          )}\n                          {location.type === \"station\" && location.rating && (\n                            <span>‚≠ê {location.rating}</span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right\">\n                      {location.type === \"area\" && location.averagePrice && (\n                        <div>\n                          <p className=\"font-semibold text-[#4682b4]\">\n                            {formatCurrency(location.averagePrice)}/L\n                          </p>\n                          <p className=\"text-xs text-gray-500\">avg. price</p>\n                        </div>\n                      )}\n                      \n                      {location.type === \"station\" && (\n                        <Badge \n                          className={\n                            location.isOpen \n                              ? \"bg-green-100 text-green-800\" \n                              : \"bg-red-100 text-red-800\"\n                          }\n                        >\n                          {location.isOpen ? \"Open\" : \"Closed\"}\n                        </Badge>\n                      )}\n                      \n                      {location.type === \"merchant\" && (\n                        <Badge className=\"bg-purple-100 text-purple-800\">\n                          Merchant\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Empty State */}\n          {results.length === 0 && (\n            <div className=\"text-center py-12\">\n              <MapPin className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                No locations found\n              </h3>\n              <p className=\"text-gray-500 mb-4\">\n                Try adjusting your search terms or browse by area\n              </p>\n              <Button\n                onClick={() => setLocation(\"/map-home\")}\n                className=\"bg-[#4682b4] hover:bg-[#0b1a51]\"\n              >\n                Back to Map\n              </Button>\n            </div>\n          )}\n\n          {/* Quick Actions */}\n          {results.length > 0 && (\n            <div className=\"mt-6 pt-4 border-t\">\n              <h4 className=\"text-sm font-semibold text-gray-600 mb-3\">\n                Quick Actions\n              </h4>\n              <div className=\"flex space-x-3\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setLocation(\"/search-filter\")}\n                  className=\"border-[#4682b4] text-[#4682b4] hover:bg-[#4682b4]/10\"\n                >\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  Filter Results\n                </Button>\n                <Button\n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => setLocation(\"/map-home\")}\n                  className=\"border-[#4682b4] text-[#4682b4] hover:bg-[#4682b4]/10\"\n                >\n                  <MapPin className=\"w-4 h-4 mr-2\" />\n                  Back to Map\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["SearchResults","setLocation","useLocation","searchQuery","setSearchQuery","useState","results","setResults","useEffect","query","searchResults","useQuery","response","handleLocationSelect","location","handleSearch","urlParams","formatCurrency","amount","getLocationIcon","type","jsxs","jsx","_","i","result","index","Button","ArrowLeft","Search","Input","e","Filter","Menu","Badge","Card","CardContent","MapPin"],"mappings":"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"}
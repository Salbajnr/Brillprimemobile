{"version":3,"file":"forgot-password-Cd-0f-h2.js","sources":["../../src/pages/forgot-password.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft, Mail } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { authAPI } from \"@/lib/auth\";\nimport { LoadingButton } from \"@/components/ui/loading-button\";\nimport { NotificationModal } from \"@/components/ui/notification-modal\";\nimport logo from \"../assets/images/logo.png\";\n\nexport default function ForgotPasswordPage() {\n  const [email, setEmail] = useState(\"\");\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n\n  const resetPasswordMutation = useMutation({\n    mutationFn: (email: string) => authAPI.resetPassword({ email }),\n    onSuccess: () => {\n      setShowEmailModal(true);\n    },\n    onError: (error: any) => {\n      setErrorMessage(error.message || \"Failed to send reset link. Please try again.\");\n      setShowErrorModal(true);\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (email) {\n      resetPasswordMutation.mutate(email);\n    }\n  };\n\n  const handleBackToSignIn = () => {\n    setLocation(\"/signin\");\n  };\n\n  const handleResendEmail = () => {\n    setShowEmailModal(false);\n    resetPasswordMutation.mutate(email);\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto min-h-screen bg-white flex flex-col\">\n      <div className=\"px-6 py-8 flex-1 flex flex-col justify-center\">\n        {/* Header */}\n        <div className=\"flex items-center mb-8\">\n          <Button\n            onClick={handleBackToSignIn}\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"mr-4 w-10 h-10 rounded-full bg-gray-100 hover:bg-gray-200\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Button>\n          <h1 className=\"text-xl font-bold text-[var(--brill-text)]\">Forgot Password</h1>\n        </div>\n\n        {/* Logo */}\n        <div className=\"text-center mb-8\">\n          <img \n            src={logo} \n            alt=\"Brillprime Logo\" \n            className=\"w-16 h-16 mx-auto mb-4\"\n          />\n          <h2 className=\"text-2xl font-bold text-[var(--brill-secondary)] mb-2\">\n            Reset Your Password\n          </h2>\n          <p className=\"text-[var(--brill-text-light)] text-sm\">\n            Enter your email address and we'll send you a link to reset your password.\n          </p>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\" className=\"text-[var(--brill-text)] font-medium\">\n              Email Address\n            </Label>\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[var(--brill-text-light)] w-5 h-5\" />\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your email address\"\n                className=\"pl-12 py-3 rounded-xl border-gray-300 focus:border-[var(--brill-primary)] focus:ring-[var(--brill-primary)]\"\n                required\n              />\n            </div>\n          </div>\n\n          <LoadingButton\n            type=\"submit\"\n            loading={resetPasswordMutation.isPending}\n            className=\"w-full py-3 rounded-xl bg-[var(--brill-primary)] hover:bg-[var(--brill-secondary)] text-white font-medium\"\n            disabled={!email}\n          >\n            Send Reset Link\n          </LoadingButton>\n        </form>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-[var(--brill-text-light)] text-sm\">\n            Remember your password?{\" \"}\n            <button\n              onClick={handleBackToSignIn}\n              className=\"text-[var(--brill-primary)] font-medium hover:underline\"\n            >\n              Sign In\n            </button>\n          </p>\n        </div>\n      </div>\n\n      {/* Email Sent Modal */}\n      <NotificationModal\n        isOpen={showEmailModal}\n        onClose={() => setShowEmailModal(false)}\n        type=\"email\"\n        title=\"Email Sent!\"\n        description={`We've sent a password reset link to ${email}. Please check your email and click the link to reset your password.`}\n        actionText=\"Back to Sign In\"\n        onAction={handleBackToSignIn}\n        showSecondaryAction={true}\n        secondaryActionText=\"Resend Email\"\n        onSecondaryAction={handleResendEmail}\n      />\n\n      {/* Error Modal */}\n      <NotificationModal\n        isOpen={showErrorModal}\n        onClose={() => setShowErrorModal(false)}\n        type=\"error\"\n        title=\"Reset Failed\"\n        description={errorMessage}\n        actionText=\"Try Again\"\n        onAction={() => setShowErrorModal(false)}\n      />\n    </div>\n  );\n}"],"names":["ForgotPasswordPage","email","setEmail","useState","showEmailModal","setShowEmailModal","showErrorModal","setShowErrorModal","errorMessage","setErrorMessage","setLocation","useLocation","useToast","resetPasswordMutation","useMutation","authAPI","error","handleSubmit","e","handleBackToSignIn","handleResendEmail","jsxs","jsx","Button","ArrowLeft","logo","Label","Mail","Input","LoadingButton","NotificationModal"],"mappings":"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"}
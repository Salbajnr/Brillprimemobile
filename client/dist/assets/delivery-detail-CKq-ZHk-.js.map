{"version":3,"file":"delivery-detail-CKq-ZHk-.js","sources":["../../src/components/ui/notification-system.tsx","../../src/pages/delivery-detail.tsx"],"sourcesContent":["\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { toast } from '@/hooks/use-toast';\n\n// Firebase configuration (mock for development)\nconst mockFirebaseConfig = {\n  apiKey: \"demo-api-key\",\n  authDomain: \"brillprime-demo.firebaseapp.com\",\n  projectId: \"brillprime-demo\",\n  storageBucket: \"brillprime-demo.appspot.com\",\n  messagingSenderId: \"123456789\",\n  appId: \"1:123456789:web:abcdef123456\"\n};\n\ninterface NotificationContextType {\n  notifications: Notification[];\n  addNotification: (notification: Omit<Notification, 'id' | 'timestamp'>) => void;\n  removeNotification: (id: string) => void;\n  clearAllNotifications: () => void;\n  requestPermission: () => Promise<boolean>;\n  isSupported: boolean;\n}\n\ninterface Notification {\n  id: string;\n  title: string;\n  message: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  timestamp: Date;\n  actionUrl?: string;\n  data?: any;\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\nexport function NotificationProvider({ children }: { children: React.ReactNode }) {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [isSupported, setIsSupported] = useState(false);\n  const [permission, setPermission] = useState<NotificationPermission>('default');\n\n  useEffect(() => {\n    // Check if notifications are supported\n    setIsSupported('Notification' in window && 'serviceWorker' in navigator);\n    \n    if ('Notification' in window) {\n      setPermission(Notification.permission);\n    }\n  }, []);\n\n  const requestPermission = useCallback(async (): Promise<boolean> => {\n    if (!isSupported) {\n      console.log('Notifications not supported');\n      return false;\n    }\n\n    try {\n      const permission = await Notification.requestPermission();\n      setPermission(permission);\n      \n      if (permission === 'granted') {\n        // Initialize Firebase Cloud Messaging (mock)\n        console.log('Notification permission granted');\n        \n        // In production, you would initialize FCM here:\n        // const messaging = getMessaging(firebaseApp);\n        // const token = await getToken(messaging, { vapidKey: 'your-vapid-key' });\n        // console.log('FCM token:', token);\n        \n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Error requesting notification permission:', error);\n      return false;\n    }\n  }, [isSupported]);\n\n  const addNotification = useCallback((notificationData: Omit<Notification, 'id' | 'timestamp'>) => {\n    const notification: Notification = {\n      ...notificationData,\n      id: Math.random().toString(36).substr(2, 9),\n      timestamp: new Date()\n    };\n\n    setNotifications(prev => [notification, ...prev.slice(0, 99)]); // Keep max 100 notifications\n\n    // Show browser notification if permission granted\n    if (permission === 'granted' && isSupported) {\n      try {\n        const browserNotification = new window.Notification(notification.title, {\n          body: notification.message,\n          icon: '/logo192.png', // Add your app icon\n          badge: '/badge-icon.png', // Add badge icon\n          tag: notification.id,\n          requireInteraction: notification.type === 'error',\n          data: notification.data\n        });\n\n        browserNotification.onclick = () => {\n          if (notification.actionUrl) {\n            window.focus();\n            window.location.href = notification.actionUrl;\n          }\n          browserNotification.close();\n        };\n\n        // Auto-close after 5 seconds for non-error notifications\n        if (notification.type !== 'error') {\n          setTimeout(() => {\n            browserNotification.close();\n          }, 5000);\n        }\n      } catch (error) {\n        console.error('Error showing browser notification:', error);\n      }\n    }\n\n    // Show toast notification\n    toast({\n      title: notification.title,\n      description: notification.message,\n      variant: notification.type === 'error' ? 'destructive' : 'default'\n    });\n  }, [permission, isSupported]);\n\n  const removeNotification = useCallback((id: string) => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  }, []);\n\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  const value: NotificationContextType = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearAllNotifications,\n    requestPermission,\n    isSupported\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function useNotifications() {\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n}\n\n// Push notification service\nexport const pushNotificationService = {\n  async subscribe(): Promise<string | null> {\n    if (!('serviceWorker' in navigator) || !('PushManager' in window)) {\n      console.log('Push messaging is not supported');\n      return null;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: 'demo-vapid-key' // Replace with your VAPID key\n      });\n\n      console.log('Push subscription:', subscription);\n      \n      // Send subscription to server\n      await fetch('/api/push/subscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          subscription,\n          userAgent: navigator.userAgent\n        })\n      });\n\n      return subscription.endpoint;\n    } catch (error) {\n      console.error('Error subscribing to push notifications:', error);\n      return null;\n    }\n  },\n\n  async unsubscribe(): Promise<boolean> {\n    try {\n      const registration = await navigator.serviceWorker.getRegistration();\n      if (registration) {\n        const subscription = await registration.pushManager.getSubscription();\n        if (subscription) {\n          await subscription.unsubscribe();\n          \n          // Notify server\n          await fetch('/api/push/unsubscribe', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              endpoint: subscription.endpoint\n            })\n          });\n          \n          return true;\n        }\n      }\n      return false;\n    } catch (error) {\n      console.error('Error unsubscribing from push notifications:', error);\n      return false;\n    }\n  }\n};\n\n// Service Worker content (to be added to public/sw.js)\nexport const serviceWorkerContent = `\nself.addEventListener('push', function(event) {\n  const options = {\n    body: event.data ? event.data.text() : 'New notification',\n    icon: '/logo192.png',\n    badge: '/badge-icon.png',\n    vibrate: [100, 50, 100],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1\n    },\n    actions: [\n      {\n        action: 'explore',\n        title: 'View Details',\n        icon: '/icons/checkmark.png'\n      },\n      {\n        action: 'close',\n        title: 'Close',\n        icon: '/icons/xmark.png'\n      }\n    ]\n  };\n\n  event.waitUntil(\n    self.registration.showNotification('Brill Prime', options)\n  );\n});\n\nself.addEventListener('notificationclick', function(event) {\n  event.notification.close();\n\n  if (event.action === 'explore') {\n    // Open the app\n    event.waitUntil(\n      clients.openWindow('/')\n    );\n  }\n});\n`;\n","import { useState, useEffect } from \"react\";\nimport { useLocation, Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { NotificationProvider, useNotifications } from \"@/components/ui/notification-system\";\nimport { useWebSocketDeliveryStatus } from \"@/hooks/use-websocket\";\nimport { ClientRole, MessageType } from \"../../../server/websocket\";\nimport { \n  ArrowLeft,\n  Clock,\n  MapPin,\n  Ruler,\n  MessageCircle,\n  Phone,\n  Navigation,\n  AlertTriangle,\n  Wifi,\n  WifiOff\n} from \"lucide-react\";\nimport logoImage from \"../assets/images/logo.png\";\nimport accountCircleIcon from \"../assets/images/account_circle.svg\";\nimport mapBackgroundImage from \"../assets/images/map_background.png\";\n\n// Color constants\nconst COLORS = {\n  PRIMARY: '#4682b4',\n  SECONDARY: '#0b1a51', \n  ACTIVE: '#010e42',\n  TEXT: '#131313',\n  WHITE: '#ffffff'\n} as const;\n\ninterface DeliveryDetails {\n  id: string;\n  customerName: string;\n  customerPhone: string;\n  orderType: string;\n  orderItems: Array<{\n    name: string;\n    quantity: string;\n    price: number;\n  }>;\n  pickupAddress: string;\n  deliveryAddress: string;\n  distance: string;\n  estimatedTime: string;\n  deliveryFee: number;\n  status: 'ASSIGNED' | 'PICKED_UP' | 'IN_TRANSIT' | 'DELIVERED';\n  specialInstructions?: string;\n}\n\nfunction DeliveryDetailContent() {\n  const [, setLocation] = useLocation();\n  const { addNotification } = useNotifications();\n  \n  // WebSocket integration for real-time delivery tracking\n  const { connected, deliveryUpdates, connectionError } = useWebSocketDeliveryStatus();\n  \n  // Sample delivery data - would come from route params in real app\n  const [delivery, setDelivery] = useState<DeliveryDetails>({\n    id: \"job-1\",\n    customerName: \"Mike Johnson\",\n    customerPhone: \"+234 801 234 5678\",\n    orderType: \"FUEL\",\n    orderItems: [\n      { name: \"Petrol\", quantity: \"1 litre\", price: 15000 }\n    ],\n    pickupAddress: \"Shell Gas Station, Rayfield, Jos\",\n    deliveryAddress: \"Rayfield, Jos\",\n    distance: \"10km\",\n    estimatedTime: \"15 minutes\",\n    deliveryFee: 2500,\n    status: 'ASSIGNED',\n    specialInstructions: \"Customer will meet at the main gate\"\n  });\n  \n  // Process WebSocket delivery status updates\n  useEffect(() => {\n    if (Object.keys(deliveryUpdates).length > 0 && deliveryUpdates[delivery.id]) {\n      const update = deliveryUpdates[delivery.id];\n      console.log(`Updating delivery ${delivery.id} status to ${update.status}`);\n      \n      // Update the delivery status in real-time\n      setDelivery(prev => ({\n        ...prev,\n        status: update.status as any\n      }));\n      \n      // Show notification about status change\n      addNotification({\n        type: 'info',\n        title: 'Delivery Update',\n        message: `Delivery status updated to ${update.status}`,\n        duration: 4000\n      });\n    }\n  }, [deliveryUpdates, delivery.id, addNotification]);\n\n  const handleStartNavigation = () => {\n    addNotification({\n      type: 'success',\n      title: 'Navigation Started',\n      message: 'GPS navigation to pickup location has been activated',\n      duration: 4000\n    });\n    // In real app, would integrate with navigation API\n  };\n\n  const handleReportIssue = () => {\n    addNotification({\n      type: 'info',\n      title: 'Issue Report',\n      message: 'Issue reporting form has been opened',\n      duration: 3000\n    });\n    // In real app, would open issue reporting modal\n  };\n\n  const handleContact = (type: 'call' | 'chat') => {\n    if (type === 'chat') {\n      setLocation('/chat');\n    } else {\n      addNotification({\n        type: 'info',\n        title: 'Calling Customer',\n        message: `Initiating call to ${delivery.customerName}`,\n        duration: 3000\n      });\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'ASSIGNED': return '#f59e0b';\n      case 'PICKED_UP': return COLORS.PRIMARY;\n      case 'IN_TRANSIT': return '#8b5cf6';\n      case 'DELIVERED': return '#10b981';\n      default: return COLORS.TEXT;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'ASSIGNED': return 'Assigned to You';\n      case 'PICKED_UP': return 'Picked Up';\n      case 'IN_TRANSIT': return 'In Transit';\n      case 'DELIVERED': return 'Delivered';\n      default: return status;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\" style={{ backgroundColor: COLORS.WHITE }}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-6 border-b\" style={{ borderColor: '#D4D4D4' }}>\n        <Button \n          variant=\"ghost\" \n          size=\"sm\" \n          onClick={() => setLocation('/driver-dashboard')}\n          className=\"p-2\"\n        >\n          <ArrowLeft className=\"h-6 w-6\" style={{ color: COLORS.TEXT }} />\n        </Button>\n        <h1 className=\"text-xl font-bold\" style={{ color: COLORS.TEXT }}>Delivery Detail</h1>\n        \n        {/* WebSocket Connection Status */}\n        <div className=\"w-10 flex items-center justify-center\">\n          {connected ? (\n            <Badge className=\"bg-green-500 hover:bg-green-600\">\n              <Wifi className=\"h-3 w-3 mr-1\" />\n              <span className=\"text-xs\">Live</span>\n            </Badge>\n          ) : (\n            <Badge className=\"bg-gray-500 hover:bg-gray-600\">\n              <WifiOff className=\"h-3 w-3 mr-1\" />\n              <span className=\"text-xs\">Offline</span>\n            </Badge>\n          )}\n        </div>\n      </div>\n\n      {/* Customer Info Section */}\n      <div className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-16 h-16 rounded-full overflow-hidden\">\n              <img \n                src={accountCircleIcon} \n                alt=\"Customer\" \n                className=\"w-full h-full object-cover\"\n                style={{ filter: `brightness(0) saturate(100%) invert(27%) sepia(51%) saturate(2878%) hue-rotate(176deg) brightness(102%) contrast(97%)` }}\n              />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-medium\" style={{ color: COLORS.TEXT }}>{delivery.customerName}</h2>\n              <p className=\"text-sm\" style={{ color: COLORS.TEXT + '80' }}>{delivery.customerPhone}</p>\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-3\">\n            <Button \n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => handleContact('chat')}\n              className=\"w-12 h-12 p-0 rounded-full border-2\"\n              style={{ \n                borderColor: COLORS.PRIMARY,\n                backgroundColor: COLORS.PRIMARY\n              }}\n            >\n              <MessageCircle className=\"h-6 w-6\" style={{ color: COLORS.WHITE }} />\n            </Button>\n            <Button \n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => handleContact('call')}\n              className=\"w-12 h-12 p-0 rounded-full border-2\"\n              style={{ \n                borderColor: COLORS.PRIMARY,\n                backgroundColor: COLORS.PRIMARY\n              }}\n            >\n              <Phone className=\"h-6 w-6\" style={{ color: COLORS.WHITE }} />\n            </Button>\n          </div>\n        </div>\n\n        {/* Divider */}\n        <div className=\"w-full h-px mb-6\" style={{ backgroundColor: '#D4D4D4' }}></div>\n\n        {/* Order Items */}\n        <div className=\"mb-6\">\n          {delivery.orderItems.map((item, index) => (\n            <div key={index} className=\"flex items-center space-x-4 mb-4\">\n              <div className=\"w-16 h-16 rounded-2xl flex items-center justify-center\" style={{ backgroundColor: COLORS.PRIMARY }}>\n                <div className=\"w-10 h-10\" style={{ \n                  background: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='white'%3E%3Cpath d='M19.77 7.23l.01-.01-3.72-3.72L15 4.56l2.11 2.11c-.94.36-1.61 1.26-1.61 2.33 0 1.38 1.12 2.5 2.5 2.5.36 0 .69-.08 1-.21v7.21c0 .55-.45 1-1 1s-1-.45-1-1V14c0-1.1-.9-2-2-2h-1V5c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h6v2h8c1.1 0 2-.9 2-2V9c0-.69-.28-1.32-.73-1.77zM12 10H6V6h6v4z'/%3E%3C/svg%3E\")`,\n                  backgroundSize: 'cover'\n                }}></div>\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"text-xl font-semibold\" style={{ color: COLORS.ACTIVE }}>{item.name}</h3>\n                <div className=\"flex items-center space-x-3 mt-1\">\n                  <div className=\"px-3 py-1 rounded border\" style={{ \n                    borderColor: COLORS.PRIMARY,\n                    backgroundColor: COLORS.WHITE\n                  }}>\n                    <span className=\"text-xs font-medium\" style={{ color: COLORS.PRIMARY }}>{item.quantity}</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-sm font-semibold\" style={{ color: COLORS.SECONDARY }}>₦{item.price.toLocaleString()}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Route Information */}\n        <div className=\"space-y-4 mb-6\">\n          {/* Time and progress bar */}\n          <div className=\"flex items-center space-x-3\">\n            <Clock className=\"h-5 w-5\" style={{ color: COLORS.PRIMARY }} />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-xl font-medium\" style={{ color: COLORS.TEXT }}>{delivery.estimatedTime}</p>\n                <Badge \n                  className=\"rounded-full px-3 py-1\"\n                  style={{ \n                    backgroundColor: `${getStatusColor(delivery.status)}20`, \n                    color: getStatusColor(delivery.status)\n                  }}\n                >\n                  {getStatusText(delivery.status)}\n                </Badge>\n              </div>\n              <div className=\"w-full h-1 rounded-full mt-2\" style={{ backgroundColor: '#D9D9D9' }}>\n                <div \n                  className=\"h-1 rounded-full transition-all duration-500\" \n                  style={{ \n                    backgroundColor: getStatusColor(delivery.status),\n                    width: delivery.status === 'ASSIGNED' ? '25%' : \n                           delivery.status === 'PICKED_UP' ? '50%' : \n                           delivery.status === 'IN_TRANSIT' ? '75%' : \n                           delivery.status === 'DELIVERED' ? '100%' : '0%'\n                  }}\n                ></div>\n              </div>\n            </div>\n          </div>\n\n          {/* Dotted line connector */}\n          <div className=\"flex items-center\">\n            <div className=\"w-5 h-5 flex-shrink-0\"></div>\n            <div className=\"w-px h-8 ml-2.5 border-l-2 border-dashed\" style={{ borderColor: COLORS.PRIMARY }}></div>\n          </div>\n\n          {/* Distance */}\n          <div className=\"flex items-center space-x-3\">\n            <Ruler className=\"h-5 w-5\" style={{ color: COLORS.PRIMARY }} />\n            <p className=\"text-base font-medium\" style={{ color: COLORS.TEXT }}>{delivery.distance}</p>\n          </div>\n\n          {/* Dotted line connector */}\n          <div className=\"flex items-center\">\n            <div className=\"w-5 h-5 flex-shrink-0\"></div>\n            <div className=\"w-px h-8 ml-2.5 border-l-2 border-dashed\" style={{ borderColor: COLORS.PRIMARY }}></div>\n          </div>\n\n          {/* Destination */}\n          <div className=\"flex items-center space-x-3\">\n            <MapPin className=\"h-5 w-5\" style={{ color: COLORS.PRIMARY }} />\n            <p className=\"text-base font-medium\" style={{ color: COLORS.TEXT }}>{delivery.deliveryAddress}</p>\n          </div>\n        </div>\n\n        {/* Map with Background Image */}\n        <div className=\"mb-6\">\n          <div \n            className=\"w-full h-64 rounded-2xl border relative overflow-hidden\"\n            style={{ \n              borderColor: COLORS.ACTIVE,\n              backgroundImage: `url(${mapBackgroundImage})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center'\n            }}\n          >\n            {/* Optional overlay for better text visibility */}\n            <div className=\"absolute inset-0 bg-black bg-opacity-10 rounded-2xl\"></div>\n          </div>\n          \n          {/* Navigation overlay */}\n          <div \n            className=\"relative -mt-16 mx-4 p-4 rounded-b-2xl flex items-center justify-center cursor-pointer\"\n            style={{ backgroundColor: 'rgba(255, 255, 255, 0.9)' }}\n            onClick={handleStartNavigation}\n          >\n            <Navigation className=\"h-5 w-5 mr-2\" style={{ color: COLORS.ACTIVE }} />\n            <span className=\"font-medium\" style={{ color: COLORS.ACTIVE }}>Start Navigation</span>\n          </div>\n        </div>\n\n        {/* Special Instructions */}\n        {delivery.specialInstructions && (\n          <Card className=\"mb-6 border rounded-2xl\" style={{ borderColor: '#FCD34D', backgroundColor: '#FFFBEB' }}>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <AlertTriangle className=\"h-5 w-5 mt-0.5 text-yellow-600\" />\n                <div>\n                  <h4 className=\"font-medium text-yellow-800\">Special Instructions</h4>\n                  <p className=\"text-sm text-yellow-700 mt-1\">{delivery.specialInstructions}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"space-y-3\">\n          <Button \n            onClick={handleReportIssue}\n            className=\"w-full rounded-3xl py-4 font-normal text-base\"\n            style={{ \n              backgroundColor: COLORS.PRIMARY,\n              color: COLORS.WHITE\n            }}\n          >\n            Report Issue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function DeliveryDetail() {\n  return (\n    <NotificationProvider>\n      <DeliveryDetailContent />\n    </NotificationProvider>\n  );\n}"],"names":["NotificationContext","createContext","NotificationProvider","children","notifications","setNotifications","useState","isSupported","setIsSupported","permission","setPermission","useEffect","requestPermission","useCallback","error","addNotification","notificationData","notification","prev","browserNotification","toast","removeNotification","id","n","clearAllNotifications","value","jsx","useNotifications","context","useContext","COLORS","DeliveryDetailContent","setLocation","useLocation","connected","deliveryUpdates","connectionError","useWebSocketDeliveryStatus","delivery","setDelivery","update","handleStartNavigation","handleReportIssue","handleContact","type","getStatusColor","status","getStatusText","jsxs","Button","ArrowLeft","Badge","Wifi","WifiOff","accountCircleIcon","MessageCircle","Phone","item","index","Clock","Ruler","MapPin","mapBackgroundImage","Navigation","Card","CardContent","AlertTriangle","DeliveryDetail"],"mappings":"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"}
{"version":3,"file":"reset-password-CxroekFP.js","sources":["../../src/pages/reset-password.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation, useRoute } from \"wouter\";\nimport { ArrowLeft, Lock, Eye, EyeOff } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { LoadingButton } from \"@/components/ui/loading-button\";\nimport { NotificationModal } from \"@/components/ui/notification-modal\";\nimport { authAPI } from \"@/lib/auth\";\nimport logo from \"../assets/images/logo.png\";\n\nexport default function ResetPasswordPage() {\n  const [, params] = useRoute(\"/reset-password/:token\");\n  const [, setLocation] = useLocation();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n  const token = params?.token;\n\n  useEffect(() => {\n    if (!token) {\n      setLocation(\"/forgot-password\");\n    }\n  }, [token, setLocation]);\n\n  const validatePassword = (password: string): string[] => {\n    const errors: string[] = [];\n    if (password.length < 8) {\n      errors.push(\"Password must be at least 8 characters long\");\n    }\n    if (!/(?=.*[a-z])/.test(password)) {\n      errors.push(\"Password must contain at least one lowercase letter\");\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n      errors.push(\"Password must contain at least one uppercase letter\");\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n      errors.push(\"Password must contain at least one number\");\n    }\n    return errors;\n  };\n\n  const resetPasswordMutation = useMutation({\n    mutationFn: (data: { token: string; password: string }) => authAPI.confirmResetPassword(data),\n    onSuccess: () => {\n      setShowSuccessModal(true);\n    },\n    onError: (error: any) => {\n      setErrorMessage(error.message || \"Failed to reset password. The link may have expired.\");\n      setShowErrorModal(true);\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Clear previous validation errors\n    setValidationErrors([]);\n\n    // Validate new password\n    const passwordErrors = validatePassword(newPassword);\n    if (passwordErrors.length > 0) {\n      setValidationErrors(passwordErrors);\n      return;\n    }\n\n    // Check if passwords match\n    if (newPassword !== confirmPassword) {\n      setValidationErrors([\"Passwords do not match\"]);\n      return;\n    }\n\n    // Submit the password reset\n    if (token) {\n      resetPasswordMutation.mutate({\n        token,\n        password: newPassword,\n      });\n    }\n  };\n\n  const handleBackToForgotPassword = () => {\n    setLocation(\"/forgot-password\");\n  };\n\n  const handleGoToSignIn = () => {\n    setLocation(\"/signin\");\n  };\n\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <div className=\"w-full max-w-md mx-auto min-h-screen bg-white flex flex-col\">\n      <div className=\"px-6 py-8 flex-1 flex flex-col justify-center\">\n        {/* Header */}\n        <div className=\"flex items-center mb-8\">\n          <Button\n            onClick={handleBackToForgotPassword}\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"mr-4 w-10 h-10 rounded-full bg-gray-100 hover:bg-gray-200\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Button>\n          <h1 className=\"text-xl font-bold text-[var(--brill-text)]\">Reset Password</h1>\n        </div>\n\n        {/* Logo */}\n        <div className=\"text-center mb-8\">\n          <img \n            src={logo} \n            alt=\"Brillprime Logo\" \n            className=\"w-16 h-16 mx-auto mb-4\"\n          />\n          <h2 className=\"text-2xl font-bold text-[var(--brill-secondary)] mb-2\">\n            Set New Password\n          </h2>\n          <p className=\"text-[var(--brill-text-light)] text-sm\">\n            Create a strong password to secure your account.\n          </p>\n        </div>\n\n        {/* Validation Errors */}\n        {validationErrors.length > 0 && (\n          <div className=\"bg-red-50 border border-red-200 rounded-xl p-4 mb-6\">\n            <ul className=\"text-red-600 text-sm space-y-1\">\n              {validationErrors.map((error, index) => (\n                <li key={index}>• {error}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"newPassword\" className=\"text-[var(--brill-text)] font-medium\">\n              New Password\n            </Label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[var(--brill-text-light)] w-5 h-5\" />\n              <Input\n                id=\"newPassword\"\n                type={showNewPassword ? \"text\" : \"password\"}\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                placeholder=\"Enter new password\"\n                className=\"pl-12 pr-12 py-3 rounded-xl border-gray-300 focus:border-[var(--brill-primary)] focus:ring-[var(--brill-primary)]\"\n                required\n              />\n              <Button\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-8 w-8 p-0\"\n                onClick={() => setShowNewPassword(!showNewPassword)}\n              >\n                {showNewPassword ? (\n                  <EyeOff className=\"h-4 w-4 text-[var(--brill-text-light)]\" />\n                ) : (\n                  <Eye className=\"h-4 w-4 text-[var(--brill-text-light)]\" />\n                )}\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"confirmPassword\" className=\"text-[var(--brill-text)] font-medium\">\n              Confirm Password\n            </Label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[var(--brill-text-light)] w-5 h-5\" />\n              <Input\n                id=\"confirmPassword\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                placeholder=\"Confirm new password\"\n                className=\"pl-12 pr-12 py-3 rounded-xl border-gray-300 focus:border-[var(--brill-primary)] focus:ring-[var(--brill-primary)]\"\n                required\n              />\n              <Button\n                type=\"button\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-8 w-8 p-0\"\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n              >\n                {showConfirmPassword ? (\n                  <EyeOff className=\"h-4 w-4 text-[var(--brill-text-light)]\" />\n                ) : (\n                  <Eye className=\"h-4 w-4 text-[var(--brill-text-light)]\" />\n                )}\n              </Button>\n            </div>\n          </div>\n\n          <LoadingButton\n            type=\"submit\"\n            loading={resetPasswordMutation.isPending}\n            className=\"w-full py-3 rounded-xl bg-[var(--brill-primary)] hover:bg-[var(--brill-secondary)] text-white font-medium\"\n            disabled={!newPassword || !confirmPassword}\n          >\n            Reset Password\n          </LoadingButton>\n        </form>\n\n        {/* Password Requirements */}\n        <div className=\"mt-6 p-4 bg-blue-50 rounded-xl\">\n          <h4 className=\"text-sm font-medium text-[var(--brill-text)] mb-2\">Password Requirements:</h4>\n          <ul className=\"text-xs text-[var(--brill-text-light)] space-y-1\">\n            <li>• At least 8 characters long</li>\n            <li>• Contains uppercase and lowercase letters</li>\n            <li>• Contains at least one number</li>\n            <li>• Strong passwords help keep your account secure</li>\n          </ul>\n        </div>\n      </div>\n\n      {/* Success Modal */}\n      <NotificationModal\n        isOpen={showSuccessModal}\n        onClose={() => setShowSuccessModal(false)}\n        type=\"success\"\n        title=\"Password Successfully Changed!\"\n        description=\"Your password has been reset successfully. You can now sign in with your new password.\"\n        actionText=\"Go to Sign In\"\n        onAction={handleGoToSignIn}\n      />\n\n      {/* Error Modal */}\n      <NotificationModal\n        isOpen={showErrorModal}\n        onClose={() => setShowErrorModal(false)}\n        type=\"error\"\n        title=\"Password Reset Failed\"\n        description={errorMessage}\n        actionText=\"Try Again\"\n        onAction={() => setShowErrorModal(false)}\n        showSecondaryAction={true}\n        secondaryActionText=\"Back to Forgot Password\"\n        onSecondaryAction={handleBackToForgotPassword}\n      />\n    </div>\n  );\n}"],"names":["ResetPasswordPage","params","useRoute","setLocation","useLocation","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","showSuccessModal","setShowSuccessModal","showErrorModal","setShowErrorModal","errorMessage","setErrorMessage","validationErrors","setValidationErrors","token","useEffect","validatePassword","password","errors","resetPasswordMutation","useMutation","data","authAPI","error","handleSubmit","passwordErrors","handleBackToForgotPassword","handleGoToSignIn","jsxs","jsx","Button","ArrowLeft","logo","index","Label","Lock","Input","EyeOff","Eye","LoadingButton","NotificationModal"],"mappings":"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"}
{"version":3,"file":"fuel-order-details-BWuZw-Lh.js","sources":["../../src/pages/fuel-order-details.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft, MapPin, Clock, Fuel, Plus, Minus, Calendar, MessageSquare, Phone } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useWebSocketOrders, useWebSocketFuelOrders } from \"@/hooks/use-websocket\";\nimport LiveMap from \"@/components/ui/live-map\";\n\ninterface FuelStation {\n  id: string;\n  name: string;\n  brand: string;\n  address: string;\n  latitude: number;\n  longitude: number;\n  distance: number;\n  rating: number;\n  reviewCount: number;\n  prices: {\n    PMS: number;\n    AGO: number;\n    DPK: number;\n  };\n  fuelTypes: string[];\n  isOpen: boolean;\n  deliveryTime: string;\n  phone: string;\n}\n\nexport default function FuelOrderDetails() {\n  const [, setLocation] = useLocation();\n  const { user } = useAuth();\n  const { connected } = useWebSocketOrders();\n  const { \n    connected: fuelOrderConnected, \n    orderUpdates, \n    joinOrderRoom \n  } = useWebSocketFuelOrders();\n\n  const [station, setStation] = useState<FuelStation | null>(null);\n  const [selectedFuelType, setSelectedFuelType] = useState<\"PMS\" | \"AGO\" | \"DPK\">(\"PMS\");\n  const [quantity, setQuantity] = useState(20);\n  const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n  const [userLocation, setUserLocation] = useState<{lat: number, lng: number} | null>(null);\n  const [scheduledTime, setScheduledTime] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [stationLoading, setStationLoading] = useState(true);\n\n  // Get station ID from URL\n  const stationId = window.location.pathname.split('/').pop();\n\n  // Get user's current GPS location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setUserLocation({ lat: latitude, lng: longitude });\n\n          // Reverse geocode to get address\n          fetch(`https://api.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`)\n            .then(res => res.json())\n            .then(data => {\n              if (data.display_name) {\n                setDeliveryAddress(data.display_name);\n              }\n            })\n            .catch(console.error);\n        },\n        (error) => {\n          console.error('Error getting location:', error);\n          // Fallback to default location (Abuja)\n          setUserLocation({ lat: 9.0765, lng: 7.3986 });\n        },\n        { enableHighAccuracy: true, timeout: 10000, maximumAge: 300000 }\n      );\n    }\n  }, []);\n\n  // Fetch station data from API\n  useEffect(() => {\n    const fetchStation = async () => {\n      if (!stationId) return;\n\n      try {\n        const response = await fetch(`/api/fuel/stations/${stationId}`, {\n          credentials: 'include'\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setStation(data.station);\n        } else {\n          console.error('Failed to fetch station data');\n        }\n      } catch (error) {\n        console.error('Error fetching station:', error);\n      } finally {\n        setStationLoading(false);\n      }\n    };\n\n    fetchStation();\n  }, [stationId]);\n\n  const calculateTotal = () => {\n    if (!station) return 0;\n    const unitPrice = station.prices[selectedFuelType];\n    const deliveryFee = 500;\n    return (quantity * unitPrice) + deliveryFee;\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-NG', {\n      style: 'currency',\n      currency: 'NGN',\n      minimumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const handleQuantityChange = (delta: number) => {\n    const newQuantity = quantity + delta;\n    if (newQuantity >= 5 && newQuantity <= 200) {\n      setQuantity(newQuantity);\n    }\n  };\n\n  const handlePlaceOrder = async () => {\n    if (!station || !user || !deliveryAddress.trim() || !userLocation) return;\n\n    setIsLoading(true);\n    try {\n      const orderData = {\n        stationId: station.id,\n        fuelType: selectedFuelType,\n        quantity,\n        unitPrice: station.prices[selectedFuelType],\n        totalAmount: calculateTotal(),\n        deliveryAddress,\n        deliveryLatitude: userLocation.lat,\n        deliveryLongitude: userLocation.lng,\n        scheduledDeliveryTime: scheduledTime || undefined,\n        notes: notes || undefined\n      };\n\n      const response = await fetch('/api/fuel/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(orderData),\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        // Real-time WebSocket notifications would be handled by the backend\n        if (connected) {\n          console.log('Order created, WebSocket connected for real-time updates');\n        }\n\n        // Join order room for real-time updates\n        if (fuelOrderConnected) {\n          joinOrderRoom(result.order.id);\n        }\n\n        setLocation(`/order-confirmation/${result.order.id}`);\n      } else {\n        alert('Failed to place order: ' + result.message);\n      }\n    } catch (error) {\n      console.error('Order placement error:', error);\n      alert('Failed to place order. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (stationLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading station details...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!station) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600 mb-4\">Station not found</p>\n          <Button onClick={() => setLocation(\"/fuel-ordering\")}>\n            Back to Fuel Ordering\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 w-full max-w-md mx-auto\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"flex items-center justify-between p-4\">\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => setLocation(\"/fuel-ordering\")}\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Button>\n          <h1 className=\"text-lg font-semibold text-[#131313]\">Order Fuel</h1>\n          <div className=\"w-10\"></div>\n        </div>\n      </div>\n\n      <div className=\"p-4 space-y-6\">\n        {/* Station Info */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-start justify-between mb-3\">\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-[#131313]\">{station.name}</h3>\n                <p className=\"text-sm text-gray-600 mb-2\">{station.address}</p>\n                <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                  <div className=\"flex items-center space-x-1\">\n                    <MapPin className=\"w-3 h-3\" />\n                    <span>{station.distance.toFixed(1)} km away</span>\n                  </div>\n                  <div className=\"flex items-center space-x-1\">\n                    <Clock className=\"w-3 h-3\" />\n                    <span>{station.deliveryTime}</span>\n                  </div>\n                </div>\n              </div>\n              <Badge className={station.isOpen ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}>\n                {station.isOpen ? \"Open\" : \"Closed\"}\n              </Badge>\n            </div>\n            <div className=\"flex space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => window.location.href = `tel:${station.phone}`}\n              >\n                <Phone className=\"w-4 h-4 mr-1\" />\n                Call\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setLocation(`/chat/station/${station.id}`)}\n              >\n                <MessageSquare className=\"w-4 h-4 mr-1\" />\n                Chat\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Live Map */}\n        {userLocation && (\n          <Card>\n            <CardContent className=\"p-4\">\n              <h4 className=\"font-medium text-[#131313] mb-3\">Station Location</h4>\n              <div className=\"h-48 rounded-lg overflow-hidden\">\n                <LiveMap\n                  showUserLocation={true}\n                  showNearbyUsers={false}\n                  className=\"w-full h-full\"\n                  userRole=\"CONSUMER\"\n                  center={{ lat: station.latitude, lng: station.longitude }}\n                  markers={[\n                    {\n                      lat: station.latitude,\n                      lng: station.longitude,\n                      title: station.name,\n                      type: 'station'\n                    },\n                    {\n                      lat: userLocation.lat,\n                      lng: userLocation.lng,\n                      title: 'Your Location',\n                      type: 'user'\n                    }\n                  ]}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Fuel Type Selection */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <h4 className=\"font-medium text-[#131313] mb-3\">Select Fuel Type</h4>\n            <div className=\"grid grid-cols-3 gap-2\">\n              {station.fuelTypes.map((type) => (\n                <button\n                  key={type}\n                  onClick={() => setSelectedFuelType(type as \"PMS\" | \"AGO\" | \"DPK\")}\n                  className={`p-3 rounded-lg border text-center transition-colors ${\n                    selectedFuelType === type\n                      ? \"border-[#4682b4] bg-[#4682b4]/10 text-[#4682b4]\"\n                      : \"border-gray-200 hover:border-gray-300\"\n                  }`}\n                >\n                  <div className=\"font-medium\">{type}</div>\n                  <div className=\"text-sm text-gray-600\">\n                    {formatCurrency(station.prices[type as keyof typeof station.prices])}/L\n                  </div>\n                </button>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Quantity Selection */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <h4 className=\"font-medium text-[#131313] mb-3\">Quantity (Liters)</h4>\n            <div className=\"flex items-center justify-center space-x-4\">\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={() => handleQuantityChange(-5)}\n                disabled={quantity <= 5}\n              >\n                <Minus className=\"w-4 h-4\" />\n              </Button>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-[#4682b4]\">{quantity}L</div>\n                <div className=\"text-sm text-gray-600\">\n                  {formatCurrency(quantity * station.prices[selectedFuelType])}\n                </div>\n              </div>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={() => handleQuantityChange(5)}\n                disabled={quantity >= 200}\n              >\n                <Plus className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Delivery Details */}\n        <Card>\n          <CardContent className=\"p-4 space-y-4\">\n            <h4 className=\"font-medium text-[#131313]\">Delivery Details</h4>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Delivery Address *\n              </label>\n              <Textarea\n                placeholder=\"Enter your delivery address\"\n                value={deliveryAddress}\n                onChange={(e) => setDeliveryAddress(e.target.value)}\n                className=\"resize-none\"\n                rows={3}\n              />\n              {userLocation && (\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  GPS coordinates: {userLocation.lat.toFixed(6)}, {userLocation.lng.toFixed(6)}\n                </p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Preferred Delivery Time (Optional)\n              </label>\n              <Input\n                type=\"datetime-local\"\n                value={scheduledTime}\n                onChange={(e) => setScheduledTime(e.target.value)}\n                min={new Date().toISOString().slice(0, 16)}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Special Notes (Optional)\n              </label>\n              <Textarea\n                placeholder=\"Any special instructions for delivery\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                className=\"resize-none\"\n                rows={2}\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Order Summary */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <h4 className=\"font-medium text-[#131313] mb-3\">Order Summary</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span>Fuel ({quantity}L {selectedFuelType})</span>\n                <span>{formatCurrency(quantity * station.prices[selectedFuelType])}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Delivery Fee</span>\n                <span>{formatCurrency(500)}</span>\n              </div>\n              <div className=\"border-t pt-2 flex justify-between font-semibold text-lg\">\n                <span>Total</span>\n                <span className=\"text-[#4682b4]\">{formatCurrency(calculateTotal())}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Place Order Button */}\n        <Button\n          onClick={handlePlaceOrder}\n          disabled={!deliveryAddress.trim() || isLoading || !userLocation}\n          className=\"w-full h-12 bg-[#4682b4] hover:bg-[#0b1a51] text-white rounded-xl\"\n        >\n          {isLoading ? (\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              <span>Placing Order...</span>\n            </div>\n          ) : (\n            `Place Order - ${formatCurrency(calculateTotal())}`\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n}"],"names":["FuelOrderDetails","setLocation","useLocation","user","useAuth","connected","useWebSocketOrders","fuelOrderConnected","orderUpdates","joinOrderRoom","useWebSocketFuelOrders","station","setStation","useState","selectedFuelType","setSelectedFuelType","quantity","setQuantity","deliveryAddress","setDeliveryAddress","userLocation","setUserLocation","scheduledTime","setScheduledTime","notes","setNotes","isLoading","setIsLoading","stationLoading","setStationLoading","stationId","useEffect","position","latitude","longitude","res","data","error","response","calculateTotal","unitPrice","formatCurrency","amount","handleQuantityChange","delta","newQuantity","handlePlaceOrder","orderData","result","jsxs","jsx","Button","ArrowLeft","Card","CardContent","MapPin","Clock","Badge","Phone","MessageSquare","LiveMap","type","Minus","Plus","Textarea","e","Input"],"mappings":"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"}
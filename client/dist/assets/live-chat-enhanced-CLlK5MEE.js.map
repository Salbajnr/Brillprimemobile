{"version":3,"file":"live-chat-enhanced-CLlK5MEE.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/check-check.js","../../../node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","../../../node_modules/lucide-react/dist/esm/icons/paperclip.js","../../../node_modules/lucide-react/dist/esm/icons/video.js","../../src/pages/live-chat-enhanced.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CheckCheck = createLucideIcon(\"CheckCheck\", [\n  [\"path\", { d: \"M18 6 7 17l-5-5\", key: \"116fxf\" }],\n  [\"path\", { d: \"m22 10-7.5 7.5L13 16\", key: \"ke71qq\" }]\n]);\n\nexport { CheckCheck as default };\n//# sourceMappingURL=check-check.js.map\n","/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst EllipsisVertical = createLucideIcon(\"EllipsisVertical\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n]);\n\nexport { EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Paperclip = createLucideIcon(\"Paperclip\", [\n  [\n    \"path\",\n    {\n      d: \"m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48\",\n      key: \"1u3ebp\"\n    }\n  ]\n]);\n\nexport { Paperclip as default };\n//# sourceMappingURL=paperclip.js.map\n","/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Video = createLucideIcon(\"Video\", [\n  [\n    \"path\",\n    {\n      d: \"m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5\",\n      key: \"ftymec\"\n    }\n  ],\n  [\"rect\", { x: \"2\", y: \"6\", width: \"14\", height: \"12\", rx: \"2\", key: \"158x01\" }]\n]);\n\nexport { Video as default };\n//# sourceMappingURL=video.js.map\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useWebSocket } from '@/hooks/use-websocket';\nimport { \n  ArrowLeft, \n  Send, \n  Phone, \n  Video, \n  MoreVertical, \n  Paperclip, \n  Image as ImageIcon,\n  MapPin,\n  Clock,\n  Check,\n  CheckCheck\n} from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\n\ninterface ChatMessage {\n  id: string;\n  senderId: string;\n  senderName: string;\n  senderRole: string;\n  message: string;\n  timestamp: number;\n  type: 'text' | 'image' | 'location' | 'system';\n  attachments?: Array<{\n    type: string;\n    url: string;\n    name: string;\n  }>;\n  status: 'sending' | 'sent' | 'delivered' | 'read';\n  orderId?: string;\n}\n\ninterface ChatParticipant {\n  id: string;\n  name: string;\n  role: string;\n  avatar?: string;\n  isOnline: boolean;\n  lastSeen?: number;\n}\n\ninterface ChatSession {\n  id: string;\n  orderId?: string;\n  participants: ChatParticipant[];\n  messages: ChatMessage[];\n  type: 'support' | 'order' | 'general';\n  status: 'active' | 'closed';\n}\n\nexport default function LiveChatEnhanced() {\n  const { user } = useAuth();\n  const [chatSessions, setChatSessions] = useState<ChatSession[]>([]);\n  const [activeSession, setActiveSession] = useState<ChatSession | null>(null);\n  const [message, setMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUsers, setTypingUsers] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messageInputRef = useRef<HTMLInputElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n\n  const { socket, isConnected } = useWebSocket({\n    onNewMessage: (data: any) => {\n      const newMessage: ChatMessage = {\n        id: data.id,\n        senderId: data.senderId,\n        senderName: data.senderName,\n        senderRole: data.senderRole,\n        message: data.message,\n        timestamp: data.timestamp,\n        type: data.type || 'text',\n        attachments: data.attachments,\n        status: 'delivered',\n        orderId: data.orderId\n      };\n\n      setChatSessions(prev => prev.map(session => {\n        if (session.id === data.chatId || session.orderId === data.orderId) {\n          return {\n            ...session,\n            messages: [...session.messages, newMessage]\n          };\n        }\n        return session;\n      }));\n\n      // Show notification if not in active session\n      if (activeSession?.id !== data.chatId) {\n        toast({\n          title: `New message from ${data.senderName}`,\n          description: data.message.slice(0, 50) + (data.message.length > 50 ? '...' : ''),\n        });\n      }\n    },\n    onTypingUpdate: (data: any) => {\n      setTypingUsers(prev => {\n        if (data.isTyping) {\n          return prev.includes(data.userId) ? prev : [...prev, data.userId];\n        } else {\n          return prev.filter(id => id !== data.userId);\n        }\n      });\n\n      // Clear typing indicator after 3 seconds\n      setTimeout(() => {\n        setTypingUsers(prev => prev.filter(id => id !== data.userId));\n      }, 3000);\n    },\n    onUserStatusUpdate: (data: any) => {\n      setChatSessions(prev => prev.map(session => ({\n        ...session,\n        participants: session.participants.map(participant => \n          participant.id === data.userId \n            ? { ...participant, isOnline: data.isOnline, lastSeen: data.lastSeen }\n            : participant\n        )\n      })));\n    },\n    onRoleBasedMessage: (data: any) => {\n      // Handle role-specific message features\n      if (data.messageType === 'driver_location') {\n        // Handle driver location updates\n        setChatSessions(prev => prev.map(session => {\n          if (session.id === data.chatId) {\n            const locationMessage: ChatMessage = {\n              id: data.id,\n              senderId: data.senderId,\n              senderName: data.senderName,\n              senderRole: 'driver',\n              message: `📍 Location shared`,\n              timestamp: data.timestamp,\n              type: 'location',\n              status: 'delivered',\n              orderId: data.orderId\n            };\n            return { ...session, messages: [...session.messages, locationMessage] };\n          }\n          return session;\n        }));\n      }\n    }\n  });\n\n  const loadChatSessions = async () => {\n    try {\n      const response = await fetch('/api/chat/sessions', {\n        credentials: 'include'\n      });\n\n      if (!response.ok) throw new Error('Failed to load chat sessions');\n\n      const data = await response.json();\n      setChatSessions(data.sessions || []);\n\n      // Auto-select first active session\n      const activeSessions = data.sessions.filter((s: ChatSession) => s.status === 'active');\n      if (activeSessions.length > 0) {\n        setActiveSession(activeSessions[0]);\n        loadChatMessages(activeSessions[0].id);\n      }\n    } catch (error) {\n      console.error('Error loading chat sessions:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load chat sessions\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadChatMessages = async (chatId: string) => {\n    try {\n      const response = await fetch(`/api/chat/messages/${chatId}`, {\n        credentials: 'include'\n      });\n\n      if (!response.ok) throw new Error('Failed to load messages');\n\n      const data = await response.json();\n\n      setChatSessions(prev => prev.map(session => \n        session.id === chatId \n          ? { ...session, messages: data.messages || [] }\n          : session\n      ));\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (!message.trim() || !activeSession || !socket) return;\n\n    const tempMessage: ChatMessage = {\n      id: 'temp_' + Date.now(),\n      senderId: user?.id || '',\n      senderName: user?.firstName + ' ' + user?.lastName || '',\n      senderRole: user?.role || '',\n      message: message.trim(),\n      timestamp: Date.now(),\n      type: 'text',\n      status: 'sending'\n    };\n\n    // Add message optimistically\n    setChatSessions(prev => prev.map(session => \n      session.id === activeSession.id \n        ? { ...session, messages: [...session.messages, tempMessage] }\n        : session\n    ));\n\n    try {\n      const response = await fetch('/api/chat/send-message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          chatId: activeSession.id,\n          message: message.trim(),\n          type: 'text',\n          orderId: activeSession.orderId\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to send message');\n\n      const data = await response.json();\n\n      // Update message with server response\n      setChatSessions(prev => prev.map(session => \n        session.id === activeSession.id \n          ? { \n              ...session, \n              messages: session.messages.map(msg => \n                msg.id === tempMessage.id \n                  ? { ...msg, id: data.messageId, status: 'sent' }\n                  : msg\n              )\n            }\n          : session\n      ));\n\n      setMessage('');\n      setIsTyping(false);\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Update message status to failed\n      setChatSessions(prev => prev.map(session => \n        session.id === activeSession.id \n          ? { \n              ...session, \n              messages: session.messages.map(msg => \n                msg.id === tempMessage.id \n                  ? { ...msg, status: 'sent' } // Keep as sent for now\n                  : msg\n              )\n            }\n          : session\n      ));\n\n      toast({\n        title: \"Error\",\n        description: \"Failed to send message\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleTyping = useCallback(() => {\n    if (!activeSession || !socket) return;\n\n    if (!isTyping) {\n      setIsTyping(true);\n      socket.emit('typing_start', { \n        chatId: activeSession.id,\n        userId: user?.id,\n        userName: user?.firstName + ' ' + user?.lastName\n      });\n    }\n\n    // Clear existing timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Set new timeout\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false);\n      socket.emit('typing_stop', { \n        chatId: activeSession.id,\n        userId: user?.id \n      });\n    }, 2000);\n  }, [activeSession, socket, user, isTyping]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const formatTime = (timestamp: number) => {\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const getMessageStatusIcon = (status: string) => {\n    switch (status) {\n      case 'sending': return <Clock className=\"h-3 w-3 text-gray-400\" />;\n      case 'sent': return <Check className=\"h-3 w-3 text-gray-400\" />;\n      case 'delivered': return <CheckCheck className=\"h-3 w-3 text-gray-400\" />;\n      case 'read': return <CheckCheck className=\"h-3 w-3 text-blue-500\" />;\n      default: return null;\n    }\n  };\n\n  useEffect(() => {\n    loadChatSessions();\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [activeSession?.messages]);\n\n  useEffect(() => {\n    if (activeSession && socket) {\n      socket.emit('join_chat', { chatId: activeSession.id });\n\n      return () => {\n        socket.emit('leave_chat', { chatId: activeSession.id });\n      };\n    }\n  }, [activeSession, socket]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-96 bg-gray-200 rounded-xl\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-6xl mx-auto flex h-screen\">\n        {/* Chat Sessions Sidebar */}\n        <div className=\"w-80 bg-white border-r flex flex-col\">\n          <div className=\"p-4 border-b\">\n            <h2 className=\"text-lg font-semibold\">Messages</h2>\n            <div className=\"flex items-center space-x-2 mt-2\">\n              <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'}`}></div>\n              <span className=\"text-xs text-gray-600\">\n                {isConnected ? 'Connected' : 'Disconnected'}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"flex-1 overflow-y-auto\">\n            {chatSessions.map(session => (\n              <div\n                key={session.id}\n                onClick={() => {\n                  setActiveSession(session);\n                  loadChatMessages(session.id);\n                }}\n                className={`p-4 border-b cursor-pointer hover:bg-gray-50 ${\n                  activeSession?.id === session.id ? 'bg-blue-50 border-r-4 border-r-blue-500' : ''\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"relative\">\n                    <Avatar className=\"w-10 h-10\">\n                      <AvatarImage src={session.participants[0]?.avatar} />\n                      <AvatarFallback>\n                        {session.participants[0]?.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                      </AvatarFallback>\n                    </Avatar>\n                    {session.participants[0]?.isOnline && (\n                      <div className=\"absolute -bottom-0.5 -right-0.5 w-3 h-3 bg-green-400 rounded-full border-2 border-white\"></div>\n                    )}\n                  </div>\n\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"font-medium text-sm truncate\">\n                        {session.participants.filter(p => p.id !== user?.id)[0]?.name || 'Unknown'}\n                      </p>\n                      <Badge \n                        variant=\"secondary\" \n                        className=\"text-xs\"\n                      >\n                        {session.type}\n                      </Badge>\n                    </div>\n\n                    {session.orderId && (\n                      <p className=\"text-xs text-gray-500\">Order #{session.orderId.slice(-6)}</p>\n                    )}\n\n                    {session.messages.length > 0 && (\n                      <p className=\"text-xs text-gray-600 truncate mt-1\">\n                        {session.messages[session.messages.length - 1].message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Chat Area */}\n        <div className=\"flex-1 flex flex-col\">\n          {activeSession ? (\n            <>\n              {/* Chat Header */}\n              <div className=\"p-4 bg-white border-b flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <Avatar className=\"w-10 h-10\">\n                    <AvatarImage src={activeSession.participants[0]?.avatar} />\n                    <AvatarFallback>\n                      {activeSession.participants.filter(p => p.id !== user?.id)[0]?.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <h3 className=\"font-medium\">\n                      {activeSession.participants.filter(p => p.id !== user?.id)[0]?.name}\n                    </h3>\n                    <p className=\"text-xs text-gray-600\">\n                      {activeSession.participants.filter(p => p.id !== user?.id)[0]?.isOnline \n                        ? 'Online' \n                        : 'Last seen ' + formatTime(activeSession.participants.filter(p => p.id !== user?.id)[0]?.lastSeen || Date.now())}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Phone className=\"h-4 w-4\" />\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Video className=\"h-4 w-4\" />\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\">\n                    <MoreVertical className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Messages Area */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {activeSession.messages.map((msg, index) => (\n                  <div\n                    key={msg.id}\n                    className={`flex ${msg.senderId === user?.id ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-2xl ${\n                        msg.senderId === user?.id\n                          ? 'bg-blue-500 text-white'\n                          : 'bg-gray-100 text-gray-900'\n                      }`}\n                    >\n                      {msg.type === 'location' ? (\n                        <div className=\"flex items-center space-x-2\">\n                          <MapPin className=\"h-5 w-5\" />\n                          <p className=\"text-sm\">Location shared</p>\n                        </div>\n                      ) : (\n                        <p className=\"text-sm\">{msg.message}</p>\n                      )}\n                      <div className={`flex items-center justify-end space-x-1 mt-1 ${\n                        msg.senderId === user?.id ? 'text-blue-100' : 'text-gray-500'\n                      }`}>\n                        <span className=\"text-xs\">{formatTime(msg.timestamp)}</span>\n                        {msg.senderId === user?.id && getMessageStatusIcon(msg.status)}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n\n                {typingUsers.length > 0 && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"bg-gray-100 px-4 py-2 rounded-2xl\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                <div ref={messagesEndRef} />\n              </div>\n\n              {/* Message Input */}\n              <div className=\"p-4 bg-white border-t\">\n                <div className=\"flex items-center space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\">\n                    <Paperclip className=\"h-4 w-4\" />\n                  </Button>\n\n                  <div className=\"flex-1 relative\">\n                    <Input\n                      ref={messageInputRef}\n                      value={message}\n                      onChange={(e) => {\n                        setMessage(e.target.value);\n                        handleTyping();\n                      }}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          sendMessage();\n                        }\n                      }}\n                      placeholder=\"Type a message...\"\n                      className=\"rounded-full pr-12\"\n                    />\n\n                    <Button\n                      onClick={sendMessage}\n                      disabled={!message.trim()}\n                      size=\"sm\"\n                      className=\"absolute right-1 top-1 rounded-full\"\n                    >\n                      <Send className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"flex-1 flex items-center justify-center\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Send className=\"h-8 w-8 text-gray-400\" />\n                </div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No conversation selected</h3>\n                <p className=\"text-gray-600\">Choose a conversation from the sidebar to start messaging</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["CheckCheck","createLucideIcon","EllipsisVertical","Paperclip","Video","LiveChatEnhanced","user","useAuth","chatSessions","setChatSessions","useState","activeSession","setActiveSession","message","setMessage","isTyping","setIsTyping","typingUsers","setTypingUsers","loading","setLoading","messagesEndRef","useRef","messageInputRef","typingTimeoutRef","socket","isConnected","useWebSocket","loadChatSessions","response","data","activeSessions","s","loadChatMessages","error","toast","chatId","prev","session","sendMessage","tempMessage","msg","handleTyping","useCallback","scrollToBottom","_a","formatTime","timestamp","getMessageStatusIcon","status","jsx","Clock","Check","useEffect","jsxs","Avatar","AvatarImage","AvatarFallback","_b","n","_c","_d","p","Badge","Fragment","_e","Button","Phone","MoreVertical","index","MapPin","Input","e","Send"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}
{"version":3,"file":"qr-scanner-DwujEf1f.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/flashlight-off.js","../../../node_modules/lucide-react/dist/esm/icons/flashlight.js","../../src/pages/qr-scanner.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst FlashlightOff = createLucideIcon(\"FlashlightOff\", [\n  [\"path\", { d: \"M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4\", key: \"1r120k\" }],\n  [\"path\", { d: \"M7 2h11v4c0 2-2 2-2 4v1\", key: \"dz1920\" }],\n  [\"line\", { x1: \"11\", x2: \"18\", y1: \"6\", y2: \"6\", key: \"bi1vpe\" }],\n  [\"line\", { x1: \"2\", x2: \"22\", y1: \"2\", y2: \"22\", key: \"a6p6uj\" }]\n]);\n\nexport { FlashlightOff as default };\n//# sourceMappingURL=flashlight-off.js.map\n","/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Flashlight = createLucideIcon(\"Flashlight\", [\n  [\n    \"path\",\n    {\n      d: \"M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z\",\n      key: \"1orkel\"\n    }\n  ],\n  [\"line\", { x1: \"6\", x2: \"18\", y1: \"6\", y2: \"6\", key: \"1z11jq\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"12\", y2: \"12\", key: \"1f4yc1\" }]\n]);\n\nexport { Flashlight as default };\n//# sourceMappingURL=flashlight.js.map\n","import { useState, useRef, useEffect, useCallback } from \"react\";\nimport { Camera, ArrowLeft, Check, X, Flashlight, FlashlightOff, RotateCcw } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useLocation } from \"wouter\";\nimport { NotificationModal } from \"@/components/ui/notification-modal\";\nimport { toast } from \"@/hooks/use-toast\"; // Assuming toast is available here\n\n// Import QR scanner assets\nimport qrScannerFrame from \"../assets/images/qr_scanner_frame.svg\";\nimport successIcon from \"../assets/images/congratulations_icon.png\";\nimport errorIcon from \"../assets/images/confirmation_fail_img.png\";\n\n// Define COLORS if they are used elsewhere and not imported\nconst COLORS = {\n  PRIMARY: \"#4682b4\", // Example primary color, adjust if needed\n};\n\nexport default function QRScanner() {\n  const [, setLocation] = useLocation();\n  const [isScanning, setIsScanning] = useState(false);\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null);\n  const [flashlightOn, setFlashlightOn] = useState(false);\n  const [facingMode, setFacingMode] = useState<\"user\" | \"environment\">(\"environment\");\n  const [scanResult, setScanResult] = useState<{\n    type: \"delivery\" | \"payment\" | \"merchant\";\n    data: any;\n  } | null>(null);\n  const [modalData, setModalData] = useState<{\n    isOpen: boolean;\n    type: \"success\" | \"error\";\n    title: string;\n    message: string;\n  }>({\n    isOpen: false,\n    type: \"success\",\n    title: \"\",\n    message: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false); // Assuming isLoading is used for API calls\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null); // Added canvasRef\n  const streamRef = useRef<MediaStream | null>(null);\n\n  useEffect(() => {\n    // Request camera permission on mount\n    const getCameraPermission = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        setHasPermission(true);\n        stream.getTracks().forEach(track => track.stop()); // Stop the stream immediately after checking permission\n      } catch (err) {\n        console.error(\"Camera permission error:\", err);\n        setHasPermission(false);\n        setModalData({\n          isOpen: true,\n          type: \"error\",\n          title: \"Camera Permission Denied\",\n          message: \"Please grant camera access in your browser settings to use the QR scanner.\"\n        });\n      }\n    };\n    getCameraPermission();\n\n    return () => {\n      // Cleanup camera stream when component unmounts\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Real QR code scanning with camera\n  const startCameraScanning = useCallback(async () => {\n    if (hasPermission === false) {\n      toast({\n        title: \"Camera Access Required\",\n        description: \"Please grant camera permissions to scan.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment',\n          width: { ideal: 640 },\n          height: { ideal: 480 }\n        }\n      });\n      streamRef.current = stream; // Store stream in ref\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        await videoRef.current.play();\n        setIsScanning(true);\n\n        // Start QR detection\n        const interval = setInterval(() => {\n          if (videoRef.current && canvasRef.current) {\n            const canvas = canvasRef.current;\n            const video = videoRef.current;\n            const context = canvas.getContext('2d');\n\n            if (context) {\n              canvas.width = video.videoWidth;\n              canvas.height = video.videoHeight;\n              context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n              // In a real application, you would use a library like jsQR here\n              // to decode the QR code from the canvas imageData.\n              // For now, we simulate a successful scan after a delay.\n              if (video.videoWidth > 0) { // Check if video is playing\n                // Simulate detecting a QR code after 3 seconds of scanning\n                setTimeout(() => {\n                  const mockQRData = generateMockQRData();\n                  setScanResult(mockQRData);\n                  stopScanning();\n                  clearInterval(interval);\n                }, 3000);\n              }\n            }\n          }\n        }, 100); // Check every 100ms\n\n        // Return cleanup function for the interval\n        return () => {\n          clearInterval(interval);\n        };\n      }\n    } catch (error) {\n      console.error('Camera access error:', error);\n      toast({\n        title: \"Camera Error\",\n        description: \"Unable to access camera. Please check permissions.\",\n        variant: \"destructive\"\n      });\n      stopScanning(); // Ensure scanning is stopped on error\n    }\n  }, [hasPermission, toast]); // Add dependencies for useCallback\n\n  const stopScanning = useCallback(() => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const stream = videoRef.current.srcObject as MediaStream;\n      stream.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsScanning(false);\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n  }, []);\n\n  const generateMockQRData = () => {\n    const qrTypes = [\"delivery\", \"payment\", \"merchant\"]; // Match original types\n    const randomType = qrTypes[Math.floor(Math.random() * qrTypes.length)];\n\n    switch (randomType) {\n      case \"delivery\":\n        return {\n          type: \"delivery\",\n          data: {\n            orderId: \"ORDER_\" + Math.random().toString(36).substr(2, 9),\n            driverName: \"Driver \" + Math.random().toString(36).substr(2, 5),\n            deliveryTime: new Date().toLocaleTimeString(),\n            items: [\"Item A\", \"Item B\"],\n            totalAmount: `$${(Math.random() * 100).toFixed(2)}`\n          }\n        };\n\n      case \"payment\":\n        return {\n          type: \"payment\",\n          data: {\n            merchantName: \"BrillPrime Merchant \" + Math.floor(Math.random() * 100),\n            merchantId: \"MERCHANT_\" + Math.random().toString(36).substr(2, 9),\n            reference: \"PAY_\" + Date.now(),\n            amount: `$${(Math.random() * 5000).toFixed(2)}`\n          }\n        };\n\n      case \"merchant\":\n        return {\n          type: \"merchant\",\n          data: {\n            businessName: \"BrillPrime Service\",\n            address: \"123 Main St, Lagos\",\n            phone: \"+234 \" + Math.floor(Math.random() * 900000000 + 100000000),\n            services: [\"Delivery\", \"Payment\", \"Support\"]\n          }\n        };\n\n      default:\n        return { type: \"UNKNOWN\", data: \"Sample QR data\" };\n    }\n  };\n\n  // Simulate QR code scanning for demo purposes (fallback)\n  const simulateQRScan = (type: \"delivery\" | \"payment\" | \"merchant\") => {\n    setIsScanning(true);\n\n    setTimeout(() => {\n      const mockData = generateMockQRData();\n      setScanResult(mockData);\n      setIsScanning(false);\n    }, 2000);\n  };\n\n\n  const startCamera = async () => {\n    if (hasPermission === false) {\n      toast({\n        title: \"Camera Access Required\",\n        description: \"Please grant camera permissions to scan.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: \"environment\",\n            width: { ideal: 1280 },\n            height: { ideal: 720 }\n          }\n        });\n        streamRef.current = stream; // Store stream in ref\n\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.onloadedmetadata = () => {\n            videoRef.current?.play();\n            setIsScanning(true);\n          };\n        }\n      } catch (error) {\n        console.error('Error accessing camera:', error);\n        toast({\n          title: \"Camera Error\",\n          description: \"Unable to access camera. Please check permissions.\",\n          variant: \"destructive\"\n        });\n        setHasPermission(false); // Assume permission denied if getUserMedia fails\n      }\n  };\n\n  const stopCamera = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    setIsScanning(false);\n  };\n\n  const toggleFlashlight = async () => {\n    if (streamRef.current) {\n      const track = streamRef.current.getVideoTracks()[0];\n      // Check if the device supports torch mode\n      if (track.getCapabilities && track.getCapabilities().torch) {\n        try {\n          await track.applyConstraints({\n            advanced: [{ torch: !flashlightOn } as any] // Use `torch` for flashlight control\n          });\n          setFlashlightOn(!flashlightOn);\n        } catch (error) {\n          console.error(\"Flashlight toggle error:\", error);\n          toast({\n            title: \"Flashlight Error\",\n            description: \"Could not toggle flashlight.\",\n            variant: \"destructive\"\n          });\n        }\n      } else {\n        toast({\n          title: \"Flashlight Not Supported\",\n          description: \"Your device does not support flashlight control.\",\n          variant: \"info\"\n        });\n      }\n    }\n  };\n\n  const switchCamera = () => {\n    stopCamera(); // Stop the current camera stream\n    const newFacingMode = facingMode === \"user\" ? \"environment\" : \"user\";\n    setFacingMode(newFacingMode);\n\n    // Re-request camera with the new facing mode after a short delay\n    setTimeout(async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: newFacingMode,\n            width: { ideal: 1280 },\n            height: { ideal: 720 }\n          }\n        });\n        streamRef.current = stream; // Store new stream\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.play();\n          setIsScanning(true); // Ensure scanning state is true\n        }\n      } catch (error) {\n        console.error('Error switching camera:', error);\n        toast({\n          title: \"Camera Switch Error\",\n          description: \"Could not switch camera. Please try again.\",\n          variant: \"destructive\"\n        });\n        stopCamera(); // Stop if switching fails\n      }\n    }, 100); // Small delay to allow previous stream to release\n  };\n\n\n  const simulateQRScanAPI = async (type: \"delivery\" | \"payment\" | \"merchant\") => {\n    try {\n      setIsLoading(true);\n\n      // Generate a realistic QR code for testing\n      const qrCode = `${type.toUpperCase()}_${Date.now()}`;\n\n      const response = await fetch('/api/qr/scan', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ qrCode, type })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to process QR code');\n      }\n\n      const result = await response.json();\n\n      setScanResult({\n        type,\n        data: result.data\n      });\n\n      setModalData({\n        isOpen: true,\n        type: \"success\",\n        title: \"QR Code Scanned Successfully\",\n        message: `${type.charAt(0).toUpperCase() + type.slice(1)} information detected. Please review the details below.`\n      });\n\n      stopCamera();\n    } catch (error) {\n      setModalData({\n        isOpen: true,\n        type: \"error\",\n        title: \"QR Code Scan Failed\",\n        message: \"Unable to process the QR code. Please try again.\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const confirmDelivery = async () => {\n    if (!scanResult || scanResult.type !== 'delivery') return;\n\n    try {\n      // Call API to verify and confirm delivery\n      const response = await fetch('/api/qr/verify-delivery', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include', // Assuming cookies are needed for auth\n        body: JSON.stringify({\n          orderId: scanResult.data.orderId,\n          qrCode: `DELIVERY_${scanResult.data.orderId}_${Date.now()}`,\n          driverConfirmed: true\n        })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        setModalData({\n          isOpen: true,\n          type: \"success\",\n          title: \"Delivery Confirmed ✅\",\n          message: \"Your delivery has been verified and confirmed successfully. Payment has been processed. Thank you for using Brillprime!\"\n        });\n\n        // Navigate to order history after a delay\n        setTimeout(() => {\n          setLocation(\"/order-history\");\n        }, 3000);\n      } else {\n        setModalData({\n          isOpen: true,\n          type: \"error\",\n          title: \"Verification Failed\",\n          message: result.message || \"Unable to verify delivery. Please try again or contact support.\"\n        });\n      }\n    } catch (error) {\n      console.error('Delivery verification error:', error);\n      setModalData({\n        isOpen: true,\n        type: \"error\",\n        title: \"Connection Error\",\n        message: \"Unable to connect to verification service. Please check your internet connection.\"\n      });\n    }\n\n    setScanResult(null); // Clear scan result after confirmation attempt\n  };\n\n  const processPayment = () => {\n    setModalData({\n      isOpen: true,\n      type: \"success\",\n      title: \"Payment Processing\",\n      message: \"Redirecting to payment confirmation. Please wait...\"\n    });\n    // Simulate navigation to payment processing\n    setTimeout(() => {\n      setLocation(\"/payment-methods\");\n    }, 2000);\n  };\n\n  const saveContact = () => {\n    setModalData({\n      isOpen: true,\n      type: \"success\",\n      title: \"Contact Saved\",\n      message: \"Merchant contact information has been saved to your favorites.\"\n    });\n    setScanResult(null); // Clear scan result after action\n  };\n\n  // Handler for the main start/stop scanning button\n  const handleScanButtonClick = () => {\n    if (isScanning) {\n      stopScanning();\n    } else {\n      startCameraScanning();\n    }\n  };\n\n  if (scanResult) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Header */}\n        <div className=\"bg-white shadow-sm border-b border-blue-100/50 animate-fade-in\">\n          <div className=\"flex items-center justify-between p-4\">\n            <div className=\"flex items-center space-x-3\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setScanResult(null)}\n                className=\"transition-all duration-300 hover:scale-110\"\n              >\n                <ArrowLeft className=\"w-5 h-5 text-[#131313]\" />\n              </Button>\n              <div className=\"animate-slide-up\">\n                <h1 className=\"text-lg font-semibold text-[#131313]\">Scan Result</h1>\n                <p className=\"text-sm text-gray-600\">Review and confirm details</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"p-4 space-y-4\">\n          {/* Delivery Confirmation */}\n          {scanResult.type === \"delivery\" && (\n            <Card className=\"rounded-3xl border-2 border-blue-100/50 bg-white animate-fade-in-up\">\n              <CardContent className=\"p-6\">\n                <div className=\"text-center mb-6\">\n                  <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Check className=\"w-8 h-8 text-green-600\" />\n                  </div>\n                  <h2 className=\"text-xl font-semibold text-[#131313] mb-2\">Delivery Verification</h2>\n                  <Badge className=\"bg-green-100 text-green-800\">Order #{scanResult.data.orderId}</Badge>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Driver</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.driverName}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Delivery Time</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.deliveryTime}</span>\n                  </div>\n                  <div className=\"py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600 block mb-2\">Items Delivered</span>\n                    {scanResult.data.items.map((item: string, index: number) => (\n                      <div key={index} className=\"flex items-center space-x-2 mb-1\">\n                        <Check className=\"w-4 h-4 text-green-600\" />\n                        <span className=\"font-medium text-[#131313]\">{item}</span>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"flex justify-between items-center py-2\">\n                    <span className=\"text-gray-600\">Total Amount</span>\n                    <span className=\"font-bold text-[#4682b4] text-lg\">{scanResult.data.totalAmount}</span>\n                  </div>\n                </div>\n\n                <Button\n                  onClick={confirmDelivery}\n                  className=\"w-full mt-6 bg-[#4682b4] hover:bg-[#0b1a51] text-white rounded-2xl transition-colors duration-300\"\n                >\n                  Confirm Delivery\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Payment Processing */}\n          {scanResult.type === \"payment\" && (\n            <Card className=\"rounded-3xl border-2 border-blue-100/50 bg-white animate-fade-in-up\">\n              <CardContent className=\"p-6\">\n                <div className=\"text-center mb-6\">\n                  <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Camera className=\"w-8 h-8 text-blue-600\" />\n                  </div>\n                  <h2 className=\"text-xl font-semibold text-[#131313] mb-2\">Payment Request</h2>\n                  <Badge className=\"bg-blue-100 text-blue-800\">Merchant Payment</Badge>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Merchant</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.merchantName}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Merchant ID</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.merchantId}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Reference</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.reference}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2\">\n                    <span className=\"text-gray-600\">Amount</span>\n                    <span className=\"font-bold text-[#4682b4] text-xl\">{scanResult.data.amount}</span>\n                  </div>\n                </div>\n\n                <Button\n                  onClick={processPayment}\n                  className=\"w-full mt-6 bg-[#4682b4] hover:bg-[#0b1a51] text-white rounded-2xl transition-colors duration-300\"\n                >\n                  Proceed to Payment\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Merchant Information */}\n          {scanResult.type === \"merchant\" && (\n            <Card className=\"rounded-3xl border-2 border-blue-100/50 bg-white animate-fade-in-up\">\n              <CardContent className=\"p-6\">\n                <div className=\"text-center mb-6\">\n                  <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Camera className=\"w-8 h-8 text-purple-600\" />\n                  </div>\n                  <h2 className=\"text-xl font-semibold text-[#131313] mb-2\">Merchant Information</h2>\n                  <Badge className=\"bg-purple-100 text-purple-800\">Business Contact</Badge>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Business Name</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.businessName}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Address</span>\n                    <span className=\"font-medium text-[#131313] text-right\">{scanResult.data.address}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                    <span className=\"text-gray-600\">Phone</span>\n                    <span className=\"font-medium text-[#131313]\">{scanResult.data.phone}</span>\n                  </div>\n                  <div className=\"py-2\">\n                    <span className=\"text-gray-600 block mb-2\">Services</span>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {scanResult.data.services.map((service: string, index: number) => (\n                        <Badge key={index} variant=\"secondary\" className=\"rounded-2xl\">\n                          {service}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                <Button\n                  onClick={saveContact}\n                  className=\"w-full mt-6 bg-[#4682b4] hover:bg-[#0b1a51] text-white rounded-2xl transition-colors duration-300\"\n                >\n                  Save Contact\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        <NotificationModal\n          isOpen={modalData.isOpen}\n          onClose={() => setModalData(prev => ({ ...prev, isOpen: false }))}\n          type={modalData.type}\n          title={modalData.title}\n          message={modalData.message}\n          imageSrc={modalData.type === \"success\" ? successIcon : errorIcon}\n        />\n      </div>\n    );\n  }\n\n  // Main scanner UI when no scan result is active\n  return (\n    <div className=\"min-h-screen bg-gray-50 w-full max-w-sm sm:max-w-md md:max-w-lg lg:max-w-xl xl:max-w-2xl mx-auto px-2 sm:px-4\">{/*Responsive container*/}\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-blue-100/50 animate-fade-in\">\n        <div className=\"flex items-center justify-between p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setLocation(\"/consumer-home\")}\n              className=\"transition-all duration-300 hover:scale-110\"\n            >\n              <ArrowLeft className=\"w-5 h-5 text-[#131313]\" />\n            </Button>\n            <div className=\"animate-slide-up\">\n              <h1 className=\"text-lg font-semibold text-[#131313]\">QR Scanner</h1>\n              <p className=\"text-sm text-gray-600\">\n                {isScanning ? \"Point camera at QR code\" : \"Scan QR codes for payments & deliveries\"}\n              </p>\n            </div>\n          </div>\n          {isScanning && (\n            <div className=\"flex items-center space-x-2 animate-slide-in-right\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={toggleFlashlight}\n                className=\"transition-all duration-300 hover:scale-110\"\n              >\n                {flashlightOn ? <FlashlightOff className=\"w-5 h-5\" /> : <Flashlight className=\"w-5 h-5\" />}\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={switchCamera}\n                className=\"transition-all duration-300 hover:scale-110\"\n              >\n                <RotateCcw className=\"w-5 h-5\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"p-4 space-y-4\">\n        {/* Camera View */}\n        <Card className=\"rounded-3xl border-2 border-blue-100/50 bg-white overflow-hidden animate-fade-in-up\">\n          <CardContent className=\"p-0\">\n            {/* Updated camera view to use the video element and canvas */}\n            <div className=\"relative w-full bg-black aspect-video\">\n              {isScanning ? (\n                <>\n                  <video\n                    ref={videoRef}\n                    className=\"w-full h-full object-cover\"\n                    playsInline\n                    muted\n                    autoPlay\n                  />\n                  <canvas\n                    ref={canvasRef}\n                    className=\"absolute inset-0 w-full h-full pointer-events-none\" // Canvas overlay\n                  />\n                  <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n                    <div className=\"relative\">\n                      {/* Corner indicators */}\n                      <div className=\"absolute top-0 left-0 w-8 h-8 border-l-4 border-t-4 border-[#4682b4] rounded-tl-lg\"></div>\n                      <div className=\"absolute top-0 right-0 w-8 h-8 border-r-4 border-t-4 border-[#4682b4] rounded-tr-lg\"></div>\n                      <div className=\"absolute bottom-0 left-0 w-8 h-8 border-l-4 border-b-4 border-[#4682b4] rounded-bl-lg\"></div>\n                      <div className=\"absolute bottom-0 right-0 w-8 h-8 border-r-4 border-b-4 border-[#4682b4] rounded-br-lg\"></div>\n                      {/* Scanning line animation */}\n                      <div className=\"absolute inset-0 w-64 h-64 overflow-hidden rounded-3xl\">\n                        <div className=\"w-full h-0.5 bg-[#4682b4] animate-pulse absolute top-1/2 transform -translate-y-1/2\"></div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2\">\n                    <p className=\"text-white text-sm bg-black/50 px-3 py-1 rounded-2xl\">\n                      Align QR code within the frame\n                    </p>\n                  </div>\n                </>\n              ) : (\n                <div className=\"w-full h-full flex items-center justify-center\">\n                  <div className=\"text-center text-white\">\n                    <Camera className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\n                    <h3 className=\"text-lg font-medium mb-2\">Camera Ready</h3>\n                    <p className=\"text-sm opacity-75\">Tap start to begin scanning</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Control Buttons */}\n        <div className=\"grid grid-cols-1 gap-3\">\n          <Button\n            onClick={handleScanButtonClick} // Use the combined handler\n            disabled={hasPermission === false && !isScanning} // Disable if permission denied and not already scanning\n            className=\"w-full py-4 rounded-3xl text-lg font-semibold transition-all duration-300 hover:scale-105\"\n            style={{ backgroundColor: COLORS.PRIMARY }}\n          >\n            {isScanning ? (\n              <>\n                <X className=\"w-5 h-5 mr-2\" />\n                Stop Scanning\n              </>\n            ) : (\n              <>\n                <Camera className=\"w-5 h-5 mr-2\" />\n                Start QR Scanner\n              </>\n            )}\n          </Button>\n        </div>\n\n        {/* Quick Test Buttons for Demo */}\n        <Card className=\"rounded-3xl border-2 border-blue-100/50 bg-white animate-fade-in-up\">\n          <CardContent className=\"p-4\">\n            <h3 className=\"font-medium text-[#131313] mb-3\">Test QR Code Types</h3>\n            <div className=\"grid grid-cols-1 gap-2\">\n              <Button\n                variant=\"outline\"\n                onClick={() => simulateQRScan(\"delivery\")}\n                className=\"justify-start border-2 border-green-200 text-green-700 hover:bg-green-50 rounded-2xl transition-all duration-300 hover:scale-105\"\n              >\n                <Check className=\"w-4 h-4 mr-2\" />\n                Delivery Confirmation\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={() => simulateQRScan(\"payment\")}\n                className=\"justify-start border-2 border-blue-200 text-blue-700 hover:bg-blue-50 rounded-2xl transition-all duration-300 hover:scale-105\"\n              >\n                <Camera className=\"w-4 h-4 mr-2\" />\n                Payment QR Code\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={() => simulateQRScan(\"merchant\")}\n                className=\"justify-start border-2 border-purple-200 text-purple-700 hover:bg-purple-50 rounded-2xl transition-all duration-300 hover:scale-105\"\n              >\n                <Camera className=\"w-4 h-4 mr-2\" />\n                Merchant Contact\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <NotificationModal\n        isOpen={modalData.isOpen}\n        onClose={() => setModalData(prev => ({ ...prev, isOpen: false }))}\n        type={modalData.type}\n        title={modalData.title}\n        message={modalData.message}\n        imageSrc={modalData.type === \"success\" ? successIcon : errorIcon}\n      />\n    </div>\n  );\n}"],"names":["FlashlightOff","createLucideIcon","Flashlight","COLORS","QRScanner","setLocation","useLocation","isScanning","setIsScanning","useState","hasPermission","setHasPermission","flashlightOn","setFlashlightOn","facingMode","setFacingMode","scanResult","setScanResult","modalData","setModalData","isLoading","setIsLoading","videoRef","useRef","canvasRef","streamRef","useEffect","stream","track","err","startCameraScanning","useCallback","toast","interval","canvas","video","context","mockQRData","generateMockQRData","stopScanning","error","qrTypes","simulateQRScan","type","mockData","stopCamera","toggleFlashlight","switchCamera","newFacingMode","confirmDelivery","result","processPayment","saveContact","handleScanButtonClick","jsxs","jsx","Button","ArrowLeft","Card","CardContent","Check","Badge","item","index","Camera","service","NotificationModal","prev","successIcon","errorIcon","RotateCcw","Fragment","X"],"mappings":"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","x_google_ignoreList":[0,1]}